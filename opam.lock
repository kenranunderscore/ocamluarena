extra-files: [
  [
    "md5=026b31e1df290373198373d5aaa26e42"
    "bGliOlsKICAiTUVUQS5zZXEiIHsiTUVUQSJ9Cl0K"
  ]
  [
    "md5=3cddbf72164c29d4e50e077a92a37c6c"
    "ZGlmZiBhL2NvbmZpZ3VyZSBiL2NvbmZpZ3VyZQotLS0gYS9jb25maWd1cmUKKysrIGIvY29uZmlndXJlCkBAIC0yOTQsNyArMjk0LDcgQEAKICAgICAjIElmIGZpbmRsaWIgaGFzIGJlZW4gY29uZmlndXJlZCAtc2l0ZWxpYiAkKG9jYW1sYyAtd2hlcmUpIHRoZW4gdGhlcmUncwogICAgICMgbm90aGluZyB0byBkbywgYnV0IG90aGVyd2lzZSB3ZSBuZWVkIHRvIHB1dCBPQ2FtbCdzIFN0YW5kYXJkIExpYnJhcnkKICAgICAjIGludG8gdGhlIHBhdGggc2V0dGluZy4KLSAgICBpZiBbICEgLWUgIiR7b2NhbWxfc2l0ZWxpYn0vc3RkbGliL01FVEEiIF07IHRoZW4KKyAgICBpZiBbICEgLWUgIiR7b2NhbWxfc2l0ZWxpYn0vc3RkbGliLmNtaSIgXTsgdGhlbgogICAgICAgICBvY2FtbHBhdGg9IiR7b2NhbWxfY29yZV9zdGRsaWJ9JHtwYXRoX3NlcH0ke29jYW1scGF0aH0iCiAgICAgZmkKIGZpCg=="
  ]
  [
    "md5=3e969b841df1f51ca448e6e6295cb451"
    "c2hhcmVfcm9vdDogWyJjb25maWcuY2FjaGUiIHsib2NhbWwvY29uZmlnLmNhY2hlIn1dCg=="
  ]
  [
    "md5=8e50c5e2517d3463b3aad649748cafd7"
    "c2hhcmU6IFsiZ2VuX29jYW1sX2NvbmZpZy5tbCJdCg=="
  ]
  [
    "md5=b33c8a1a6c7ed797816ce27df4855107"
    "bmFtZT0ic2VxIgp2ZXJzaW9uPSJbZGlzdHJpYnV0ZWQgd2l0aCBPQ2FtbCA0LjA3IG9yIGFib3ZlXSIKZGVzY3JpcHRpb249ImR1bW15IGJhY2t3YXJkLWNvbXBhdGliaWxpdHkgcGFja2FnZSBmb3IgaXRlcmF0b3JzIgpyZXF1aXJlcz0iIgo="
  ]
  [
    "md5=c0a50fb1f6ffe7a48bf8600e83ae6d38"
    "bGV0ICgpID0KICBsZXQgb2NhbWxfdmVyc2lvbiA9CiAgICBsZXQgdiA9IFN5cy5vY2FtbF92ZXJzaW9uIGluCiAgICBsZXQgbCA9IFN0cmluZy5sZW5ndGggdiBpbgogICAgbGV0IHBsdXMgPSB0cnkgU3RyaW5nLmluZGV4IHYgJysnIHdpdGggTm90X2ZvdW5kIC0+IGwgaW4KICAgICgqIEludHJvZHVjZWQgaW4gNC4xMS4wOyB1c2VkIGZyb20gNC4xMi4wICopCiAgICBsZXQgdGlsZGUgPSB0cnkgU3RyaW5nLmluZGV4IHYgJ34nIHdpdGggTm90X2ZvdW5kIC0+IGwgaW4KICAgIFN0cmluZy5zdWIgdiAwIChtaW4gKG1pbiBwbHVzIHRpbGRlKSBsKQogIGluCiAgaWYgb2NhbWxfdmVyc2lvbiA8PiBTeXMuYXJndi4oMSkgdGhlbgogICAgKFByaW50Zi5lcHJpbnRmCiAgICAgICAiT0NhbWwgdmVyc2lvbiBtaXNtYXRjaDogJSVzLCBleHBlY3RlZCAlcyIKICAgICAgIG9jYW1sX3ZlcnNpb24gU3lzLmFyZ3YuKDEpOwogICAgIGV4aXQgMSkKICBlbHNlCiAgbGV0IG9jID0gb3Blbl9vdXQgKFN5cy5hcmd2LigyKSBeICIuY29uZmlnIikgaW4KICBsZXQgZXhlID0gIi5leGUiIGluCiAgbGV0IChvY2FtbCwgc3VmZml4KSA9CiAgICBsZXQgcyA9IFN5cy5leGVjdXRhYmxlX25hbWUgaW4KICAgIGlmIEZpbGVuYW1lLmNoZWNrX3N1ZmZpeCBzIGV4ZSB0aGVuCiAgICAgIChGaWxlbmFtZS5jaG9wX3N1ZmZpeCBzIGV4ZSwgZXhlKQogICAgZWxzZQogICAgICAocywgIiIpCiAgaW4KICBsZXQgb2NhbWxjID0gb2NhbWxeImMiXnN1ZmZpeCBpbgogIGxldCBsaWJkaXIgPQogICAgaWYgU3lzLmNvbW1hbmQgKG9jYW1sY14iIC13aGVyZSA+IHdoZXJlIikgPSAwIHRoZW4KICAgICAgKCogTXVzdCBiZSBvcGVuZWQgaW4gdGV4dCBtb2RlIGZvciBXaW5kb3dzICopCiAgICAgIGxldCBpYyA9IG9wZW5faW4gIndoZXJlIiBpbgogICAgICBsZXQgciA9IGlucHV0X2xpbmUgaWMgaW4KICAgICAgY2xvc2VfaW4gaWM7IHIKICAgIGVsc2UKICAgICAgZmFpbHdpdGggIkJhZCByZXR1cm4gZnJvbSAnb2NhbWxjIC13aGVyZSciCiAgaW4KICBsZXQgc3R1YnNkaXIgPQogICAgbGV0IGljID0gb3Blbl9pbiAoRmlsZW5hbWUuY29uY2F0IGxpYmRpciAibGQuY29uZiIpIGluCiAgICBsZXQgcmVjIHIgYWNjID0gdHJ5IHIgKGlucHV0X2xpbmUgaWM6OmFjYykgd2l0aCBFbmRfb2ZfZmlsZSAtPiBhY2MgaW4KICAgIGxldCBsaW5lcyA9IExpc3QucmV2IChyIFtdKSBpbgogICAgY2xvc2VfaW4gaWM7CiAgICBsZXQgc2VwID0gaWYgU3lzLm9zX3R5cGUgPSAiV2luMzIiIHRoZW4gIjsiIGVsc2UgIjoiIGluCiAgICBTdHJpbmcuY29uY2F0IHNlcCBsaW5lcwogIGluCiAgbGV0IGhhc19uYXRpdmVfZHlubGluayA9CiAgICBsZXQgY2hlY2tfZGlyIGxpYmRpciA9CiAgICAgIFN5cy5maWxlX2V4aXN0cyAoRmlsZW5hbWUuY29uY2F0IGxpYmRpciAiZHlubGluay5jbXhhIikKICAgIGluCiAgICBMaXN0LmV4aXN0cyBjaGVja19kaXIgW0ZpbGVuYW1lLmNvbmNhdCBsaWJkaXIgImR5bmxpbmsiOyBsaWJkaXJdCiAgaW4KICBsZXQgcCBmbXQgPSBQcmludGYuZnByaW50ZiBvYyAoZm10IF5eICJcbiIpIGluCiAgcCAib3BhbS12ZXJzaW9uOiBcIjIuMFwiIjsKICBwICJ2YXJpYWJsZXMgeyI7CiAgcCAiICBuYXRpdmU6ICUlYiIKICAgIChTeXMuZmlsZV9leGlzdHMgKG9jYW1sXiJvcHQiXnN1ZmZpeCkpOwogIHAgIiAgbmF0aXZlLXRvb2xzOiAlJWIiCiAgICAoKiBUaGUgdmFyaWFibGUgW29jYW1sY10gYWxyZWFkeSBoYXMgYSBzdWZmaXggb24gV2luZG93cwogICAgICAgKGV4LiAnLi4uXGJpblxvY2FtbGMuZXhlJykgc28gd2UgdXNlIFtvY2FtbF0gdG8gY2hlY2sgKikKICAgIChTeXMuZmlsZV9leGlzdHMgKG9jYW1sXiJjLm9wdCJec3VmZml4KSk7CiAgcCAiICBuYXRpdmUtZHlubGluazogJSViIgogICAgaGFzX25hdGl2ZV9keW5saW5rOwogIHAgIiAgc3R1YnNkaXI6ICUlUyIKICAgIHN0dWJzZGlyOwogIHAgIiAgcHJlaW5zdGFsbGVkOiAle29jYW1sLXN5c3RlbTppbnN0YWxsZWR9JSI7CiAgcCAiICBjb21waWxlcjogXCIle29jYW1sLXN5c3RlbTppbnN0YWxsZWQ/c3lzdGVtOn0lJXtvY2FtbC1iYXNlLWNvbXBpbGVyOnZlcnNpb259JSV7ZGttbC1iYXNlLWNvbXBpbGVyOnZlcnNpb259JSV7b2NhbWwtdmFyaWFudHM6dmVyc2lvbn0lJXtvY2FtbC1vcHRpb24tMzJiaXQ6aW5zdGFsbGVkPyszMmJpdDp9JSV7b2NhbWwtb3B0aW9uLWFmbDppbnN0YWxsZWQ/K2FmbDp9JSV7b2NhbWwtb3B0aW9uLWJ5dGVjb2RlLW9ubHk6aW5zdGFsbGVkPytieXRlY29kZS1vbmx5On0lJXtvY2FtbC1vcHRpb24tZGVmYXVsdC11bnNhZmUtc3RyaW5nOmluc3RhbGxlZD8rZGVmYXVsdC11bnNhZmUtc3RyaW5nOn0lJXtvY2FtbC1vcHRpb24tZnA6aW5zdGFsbGVkPytmcDp9JSV7b2NhbWwtb3B0aW9uLWZsYW1iZGE6aW5zdGFsbGVkPytmbGFtYmRhOn0lJXtvY2FtbC1vcHRpb24tbXVzbDppbnN0YWxsZWQ/K211c2w6fSUle29jYW1sLW9wdGlvbi1ubnA6aW5zdGFsbGVkPytubnA6fSUle29jYW1sLW9wdGlvbi1uby1mbGF0LWZsb2F0LWFycmF5Omluc3RhbGxlZD8rbm8tZmxhdC1mbG9hdC1hcnJheTp9JSV7b2NhbWwtb3B0aW9uLXNwYWNldGltZTppbnN0YWxsZWQ/K3NwYWNldGltZTp9JSV7b2NhbWwtb3B0aW9uLXN0YXRpYzppbnN0YWxsZWQ/K3N0YXRpYzp9JVwiIjsKICBwICJ9IjsKICBjbG9zZV9vdXQgb2MK"
  ]
]
opam-version: "2.0"
compiler: ["ocaml.5.1.1"]
roots: [
  "merlin.4.13.1-501"
  "ocaml.5.1.1"
  "ocaml-lsp-server.1.17.0"
  "ocamlformat.0.26.1"
  "wasmer.1.2.1"
]
installed: [
  "astring.0.8.5"
  "base.v0.16.3"
  "base-bigarray.base"
  "base-bytes.base"
  "base-domains.base"
  "base-nnp.base"
  "base-threads.base"
  "base-unix.base"
  "bigarray-compat.1.1.0"
  "camlp-streams.5.0.1"
  "chrome-trace.3.14.2"
  "cmdliner.1.2.0"
  "conf-bash.1"
  "conf-libffi.2.0.0"
  "conf-pkg-config.3"
  "conf-sdl2.1"
  "conf-sdl2-image.1"
  "cppo.1.6.9"
  "csexp.1.5.2"
  "ctypes.0.22.0"
  "ctypes-foreign.0.22.0"
  "dot-merlin-reader.4.9"
  "dune.3.14.2"
  "dune-build-info.3.14.2"
  "dune-configurator.3.14.2"
  "dune-rpc.3.14.2"
  "dyn.3.14.2"
  "either.1.0.0"
  "fiber.3.7.0"
  "fix.20230505"
  "fpath.0.7.3"
  "integers.0.7.0"
  "menhir.20231231"
  "menhirCST.20231231"
  "menhirLib.20231231"
  "menhirSdk.20231231"
  "merlin.4.13.1-501"
  "merlin-lib.4.13.1-501"
  "ocaml.5.1.1"
  "ocaml-base-compiler.5.1.1"
  "ocaml-compiler-libs.v0.12.4"
  "ocaml-config.3"
  "ocaml-lsp-server.1.17.0"
  "ocaml-lua.1.8"
  "ocaml-options-vanilla.1"
  "ocaml-version.3.6.4"
  "ocamlbuild.0.14.3"
  "ocamlc-loc.3.14.2"
  "ocamlfind.1.9.6"
  "ocamlformat.0.26.1"
  "ocamlformat-lib.0.26.1"
  "ocamlformat-rpc-lib.0.26.1"
  "ocp-indent.1.8.1"
  "ordering.3.14.2"
  "pp.1.2.0"
  "ppx_derivers.1.2.1"
  "ppx_deriving.5.2.1"
  "ppx_yojson_conv_lib.v0.16.0"
  "ppxlib.0.32.0"
  "re.1.11.0"
  "result.1.5"
  "seq.base"
  "sexplib0.v0.16.0"
  "spawn.v0.15.1"
  "stdio.v0.16.0"
  "stdlib-shims.0.3.0"
  "stdune.3.14.2"
  "topkg.1.0.7"
  "tsdl.1.0.0"
  "tsdl-image.0.6"
  "uucp.15.1.0"
  "uuseg.15.1.0"
  "uutf.1.0.3"
  "wasmer.1.2.1"
  "xdg.3.14.2"
  "yojson.2.1.2"
]
pinned: "wasmer.1.2.1"
package "astring" {
  opam-version: "2.0"
  version: "0.8.5"
  synopsis: "Alternative String module for OCaml"
  description: """\
Astring exposes an alternative `String` module for OCaml. This module
tries to balance minimality and expressiveness for basic, index-free,
string processing and provides types and functions for substrings,
string sets and string maps.

Remaining compatible with the OCaml `String` module is a non-goal. The
`String` module exposed by Astring has exception safe functions,
removes deprecated and rarely used functions, alters some signatures
and names, adds a few missing functions and fully exploits OCaml's
newfound string immutability.

Astring depends only on the OCaml standard library. It is distributed
under the ISC license."""
  maintainer: "Daniel BÃ¼nzli <daniel.buenzl i@erratique.ch>"
  authors: "The astring programmers"
  license: "ISC"
  tags: ["string" "org:erratique"]
  homepage: "https://erratique.ch/software/astring"
  doc: "https://erratique.ch/software/astring/doc"
  bug-reports: "https://github.com/dbuenzli/astring/issues"
  depends: [
    "ocaml" {>= "4.05.0"}
    "ocamlfind" {build}
    "ocamlbuild" {build}
    "topkg" {build}
  ]
  build: ["ocaml" "pkg/pkg.ml" "build" "--pinned" "%{pinned}%"]
  dev-repo: "git+http://erratique.ch/repos/astring.git"
  url {
    src: "https://erratique.ch/software/astring/releases/astring-0.8.5.tbz"
    checksum: "md5=e148907c24157d1df43bec89b58b3ec8"
  }
}
package "base" {
  opam-version: "2.0"
  version: "v0.16.3"
  synopsis: "Full standard library replacement for OCaml"
  description: """\
Full standard library replacement for OCaml

Base is a complete and portable alternative to the OCaml standard
library. It provides all standard functionalities one would expect
from a language standard library. It uses consistent conventions
across all of its module.

Base aims to be usable in any context. As a result system dependent
features such as I/O are not offered by Base. They are instead
provided by companion libraries such as stdio:

  https://github.com/janestreet/stdio"""
  maintainer: "Jane Street developers"
  authors: "Jane Street Group, LLC"
  license: "MIT"
  homepage: "https://github.com/janestreet/base"
  doc: "https://ocaml.janestreet.com/ocaml-core/latest/doc/base/index.html"
  bug-reports: "https://github.com/janestreet/base/issues"
  depends: [
    "ocaml" {>= "4.14.0"}
    "sexplib0" {>= "v0.16" & < "v0.17"}
    "dune" {>= "2.0.0"}
    "dune-configurator"
    "conf-bash"
  ]
  build: ["dune" "build" "-p" name "-j" jobs]
  dev-repo: "git+https://github.com/janestreet/base.git"
  url {
    src:
      "https://github.com/janestreet/base/archive/refs/tags/v0.16.3.tar.gz"
    checksum: [
      "md5=04572fc23a4651604cfcab83f720cb4c"
      "sha512=69380ed392faf4495459f97f70a10a6959fce71d2e6ba093472fc272141646307fd7872407de855dfa48ef0435f6587eae5aa50f4a67eac40a9e1946d0c3c070"
    ]
  }
}
package "base-bigarray" {
  opam-version: "2.0"
  version: "base"
  synopsis: ""
  description: "Bigarray library distributed with the OCaml compiler"
  maintainer: "https://github.com/ocaml/opam-repository/issues"
}
package "base-bytes" {
  opam-version: "2.0"
  version: "base"
  synopsis: "Bytes library distributed with the OCaml compiler"
  maintainer: " "
  authors: " "
  homepage: " "
  depends: [
    "ocaml" {>= "4.02.0"}
    "ocamlfind" {>= "1.5.3"}
  ]
}
package "base-domains" {
  opam-version: "2.0"
  version: "base"
  synopsis: ""
  description:
    "Domains-based parallelism distributed with the Multicore OCaml compiler\""
  maintainer: "https://github.com/ocaml-multicore/multicore-opam/issues"
  depends: [
    "ocaml" {>= "5.0"} |
    "ocaml-variants"
      {= "4.14.0+domains" | = "4.12.0+domains+effects" | = "4.12.0+domains" |
       = "4.10.0+multicore" |
       = "4.10.0+multicore+no-effect-syntax" |
       = "4.06.1+multicore"}
  ]
}
package "base-nnp" {
  opam-version: "2.0"
  version: "base"
  synopsis: "Naked pointers prohibited in the OCaml heap"
  description: """\
Installed when the compiler does not permit naked pointers in
the heap. Prior to OCaml 5.00.0, this mode was expressly selected
by configuring with --disable-naked-pointers. The shared memory
parallelism added in OCaml 5.00.0 requires this mode."""
  maintainer: "https://github.com/ocaml/opam-repository/issues"
  depends: [
    "base-domains" | "ocaml-option-nnp" |
    "ocaml-variants" {= "4.06.1+no-naked-pointers+flambda"}
  ]
}
package "base-threads" {
  opam-version: "2.0"
  version: "base"
  synopsis: ""
  description: "Threads library distributed with the OCaml compiler"
  maintainer: "https://github.com/ocaml/opam-repository/issues"
}
package "base-unix" {
  opam-version: "2.0"
  version: "base"
  synopsis: ""
  description: "Unix library distributed with the OCaml compiler"
  maintainer: "https://github.com/ocaml/opam-repository/issues"
}
package "bigarray-compat" {
  opam-version: "2.0"
  version: "1.1.0"
  synopsis: "Compatibility library to use Stdlib.Bigarray when possible"
  maintainer: "Lucas Pluvinage <lucas.pluvinage@gmail.com>"
  authors: "Lucas Pluvinage <lucas.pluvinage@gmail.com>"
  license: "ISC"
  homepage: "https://github.com/mirage/bigarray-compat"
  bug-reports: "https://github.com/mirage/bigarray-compat/issues"
  depends: [
    "ocaml" {>= "4.02.3"}
    "dune" {>= "1.0"}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["dune" "build" "-p" name "-j" jobs]
  ]
  dev-repo: "git+https://github.com/mirage/bigarray-compat.git"
  url {
    src:
      "https://github.com/mirage/bigarray-compat/releases/download/v1.1.0/bigarray-compat-1.1.0.tbz"
    checksum: [
      "sha256=434469a48d5c84e80d621b13d95eb067f8138c1650a1fd5ae6009a19b93718d5"
      "sha512=7be283fd957ee168ce1e62835d22114da405e4b7da9619b4f2030a832d45ca210a0c8f1d1c57c92e224f3512308a8a0f0923b94f44b6f582acbe0e7728d179d4"
    ]
  }
  x-commit-hash: "2ea842ba4ab2cfee7b711f7ad927917f3179a6f9"
}
package "camlp-streams" {
  opam-version: "2.0"
  version: "5.0.1"
  synopsis: "The Stream and Genlex libraries for use with Camlp4 and Camlp5"
  description: """\
This package provides two library modules:
- Stream: imperative streams, with in-place update and memoization
  of the latest element produced.
- Genlex: a small parameterized lexical analyzer producing streams
  of tokens from streams of characters.

The two modules are designed for use with Camlp4 and Camlp5:
- The stream patterns and stream expressions of Camlp4/Camlp5 consume
  and produce data of type 'a Stream.t.
- The Genlex tokenizer can be used as a simple lexical analyzer for
  Camlp4/Camlp5-generated parsers.

The Stream module can also be used by hand-written recursive-descent
parsers, but is not very convenient for this purpose.

The Stream and Genlex modules have been part of the OCaml standard library
for a long time, and have been distributed as part of the core OCaml system.
They will be removed from the OCaml standard library at some future point,
but will be maintained and distributed separately in this camlpstreams package."""
  maintainer: [
    "Florian Angeletti <florian.angeletti@inria.fr>"
    "Xavier Leroy <xavier.leroy@college-de-france.fr>"
  ]
  authors: ["Daniel de Rauglaudre" "Xavier Leroy"]
  license: "LGPL-2.1-only WITH OCaml-LGPL-linking-exception"
  homepage: "https://github.com/ocaml/camlp-streams"
  bug-reports: "https://github.com/ocaml/camlp-streams/issues"
  depends: [
    "dune" {>= "2.7"}
    "ocaml" {>= "4.02.3"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/ocaml/camlp-streams.git"
  url {
    src: "https://github.com/ocaml/camlp-streams/archive/v5.0.1.tar.gz"
    checksum: [
      "md5=afc874b25f7a1f13e8f5cfc1182b51a7"
      "sha512=2efa8dd4a636217c8d49bac1e4e7e5558fc2f45cfea66514140a59fd99dd08d61fb9f1e17804997ff648b71b13820a5d4a1eb70fed9d848aa2abd6e41f853c86"
    ]
  }
}
package "chrome-trace" {
  opam-version: "2.0"
  version: "3.14.2"
  synopsis: "Chrome trace event generation library"
  description:
    "This library offers no backwards compatibility guarantees. Use at your own risk."
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    "dune" {>= "3.12"}
    "ocaml" {>= "4.08.0"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["rm" "-rf" "vendor/csexp"]
    ["rm" "-rf" "vendor/pp"]
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src:
      "https://github.com/ocaml/dune/releases/download/3.14.2/dune-3.14.2.tbz"
    checksum: [
      "sha256=e80867cb362b2749d9d9e0cbab2982f98af1daf4459b81164ca0aac6b4e6ace1"
      "sha512=c60b35de3fe000650eb8d49a44fd9aeb25c6006be15e2c88407882e0f272747abdffc6449f6cfd68b86e233dcbb7ff685fd198635947a991cf0197dd69f489be"
    ]
  }
  x-commit-hash: "b19f6df8954995899e30275055d9582b6c83687c"
}
package "cmdliner" {
  opam-version: "2.0"
  version: "1.2.0"
  synopsis: "Declarative definition of command line interfaces for OCaml"
  description: """\
Cmdliner allows the declarative definition of command line interfaces
for OCaml.

It provides a simple and compositional mechanism to convert command
line arguments to OCaml values and pass them to your functions. The
module automatically handles syntax errors, help messages and UNIX man
page generation. It supports programs with single or multiple commands
and respects most of the [POSIX][1] and [GNU][2] conventions.

Cmdliner has no dependencies and is distributed under the ISC license.

[1]: http://pubs.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap12.html
[2]: http://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html

Home page: http://erratique.ch/software/cmdliner"""
  maintainer: "Daniel BÃ¼nzli <daniel.buenzl i@erratique.ch>"
  authors: "The cmdliner programmers"
  license: "ISC"
  tags: ["cli" "system" "declarative" "org:erratique"]
  homepage: "https://erratique.ch/software/cmdliner"
  doc: "https://erratique.ch/software/cmdliner/doc"
  bug-reports: "https://github.com/dbuenzli/cmdliner/issues"
  depends: [
    "ocaml" {>= "4.08.0"}
  ]
  build: [make "all" "PREFIX=%{prefix}%"]
  install: [
    [make "install" "LIBDIR=%{_:lib}%" "DOCDIR=%{_:doc}%"]
    [make "install-doc" "LIBDIR=%{_:lib}%" "DOCDIR=%{_:doc}%"]
  ]
  dev-repo: "git+https://erratique.ch/repos/cmdliner.git"
  url {
    src: "https://erratique.ch/software/cmdliner/releases/cmdliner-1.2.0.tbz"
    checksum:
      "sha512=6fcd6a59a6fbc6986b1aecdc3e4ce7a0dc43c65a16b427d6caa5504b10b51384f6b0bc703af646b09f5f1caeb6827b37d4480ce350ca8006204c850785f2810b"
  }
}
package "conf-bash" {
  opam-version: "2.0"
  version: "1"
  synopsis: "Virtual package to install the Bash shell"
  description: "This package will install a system bash"
  maintainer: "code@bnwr.net"
  authors: "code@bnwr.net"
  license: "GPL-3.0-or-later"
  homepage: "https://www.gnu.org/software/bash/"
  bug-reports: "https://github.com/ocaml/opam-repository/issues"
  flags: conf
  build: ["bash" "--version"]
  depexts: [
    ["bash"] {os-family = "bsd"}
    ["bash"] {os-distribution = "alpine"}
  ]
}
package "conf-libffi" {
  opam-version: "2.0"
  version: "2.0.0"
  synopsis: "Virtual package relying on libffi system installation"
  description:
    "This package can only install if libffi is installed on the system."
  maintainer: "blue-prawn"
  authors: "Anthony Green"
  license: "MIT"
  homepage: "http://sourceware.org/libffi/"
  bug-reports: "https://github.com/ocaml/opam-repository/issues"
  depends: [
    "conf-pkg-config" {build}
  ]
  flags: conf
  build: ["pkg-config" "libffi"]
  depexts: [
    ["libffi"] {os = "macos" & os-distribution = "homebrew"}
    ["libffi"] {os = "macos" & os-distribution = "macports"}
    ["libffi-dev"] {os-distribution = "alpine"}
    ["libffi-dev"] {os-family = "debian"}
    ["libffi-dev"] {os-family = "ubuntu"}
    ["libffi-devel"] {os-distribution = "centos"}
    ["libffi-devel"] {os-distribution = "fedora"}
    ["libffi-devel"] {os-distribution = "mageia"}
    ["libffi-devel"] {os-distribution = "ol"}
    ["libffi-devel"] {os-family = "suse" | os-family = "opensuse"}
    ["libffi"] {os = "freebsd"}
    ["libffi"] {os = "win32" & os-distribution = "cygwinports"}
    ["libffi"] {os-distribution = "nixos"}
  ]
}
package "conf-pkg-config" {
  opam-version: "2.0"
  version: "3"
  synopsis:
    "Check if pkg-config is installed and create an opam switch local pkgconfig folder"
  description: """\
This package can only install if the pkg-config package is installed
on the system."""
  maintainer: "unixjunkie@sdf.org"
  authors: "Francois Berenger"
  license: "GPL-1.0-or-later"
  homepage: "http://www.freedesktop.org/wiki/Software/pkg-config/"
  bug-reports: "https://github.com/ocaml/opam-repository/issues"
  flags: conf
  build: [
    ["pkg-config" "--help"] {os != "openbsd" & os != "win32"}
    ["pkgconf" "--version"] {os = "win32"}
  ]
  depexts: [
    ["pkg-config"] {os-family = "debian" | os-family = "ubuntu"}
    ["pkgconf"] {os-distribution = "arch"}
    ["pkgconf-pkg-config"] {os-distribution = "fedora"}
    ["pkgconfig"] {os-distribution = "centos" & os-version <= "7"}
    ["pkgconf-pkg-config"] {os-distribution = "mageia"}
    ["pkgconfig"] {os-distribution = "rhel" & os-version <= "7"}
    ["pkgconfig"] {os-distribution = "ol" & os-version <= "7"}
    ["pkgconf"] {os-distribution = "alpine"}
    ["pkgconfig"] {os-distribution = "nixos"}
    ["pkg-config"] {os = "macos" & os-distribution = "homebrew"}
    ["pkgconfig"] {os = "macos" & os-distribution = "macports"}
    ["pkgconf"] {os = "freebsd"}
    ["pkgconf-pkg-config"] {os-distribution = "rhel" & os-version >= "8"}
    ["pkgconf-pkg-config"] {os-distribution = "centos" & os-version >= "8"}
    ["pkgconf-pkg-config"] {os-distribution = "ol" & os-version >= "8"}
    ["system:pkgconf"] {os = "win32" & os-distribution = "cygwinports"}
    ["pkgconf"] {os = "win32" & os-distribution = "cygwin"}
  ]
}
package "conf-sdl2" {
  opam-version: "2.0"
  version: "1"
  synopsis: "Virtual package relying on a SDL2 system installation"
  description:
    "This package can only install if libSDL2 is installed on the system."
  maintainer: "blue-prawn"
  authors: "Sam Lantinga"
  license: "Zlib"
  homepage: "http://libsdl.org/"
  bug-reports: "https://github.com/ocaml/opam-repository/issues"
  depends: [
    "conf-pkg-config" {build}
  ]
  flags: conf
  build: ["pkg-config" "sdl2"]
  depexts: [
    ["sdl2-dev"] {os-distribution = "alpine"}
    ["sdl2"] {os-distribution = "arch"}
    ["libsdl2-dev"] {os-family = "debian"}
    ["libsdl2-dev"] {os-family = "ubuntu"}
    ["SDL2-devel"] {os-distribution = "fedora"}
    ["adwaita-cursor-theme" "libwayland-egl" "SDL2-devel"]
      {os-distribution = "fedora" & (os-version = "37" | os-version = "36")}
    ["epel-release" "SDL2-devel"] {os-distribution = "centos"}
    ["SDL2-devel"] {os-distribution = "ol"}
    ["sdl2"] {os = "freebsd"}
    ["sdl2"] {os = "macos" & os-distribution = "homebrew"}
    ["libsdl2-devel"] {os-distribution = "mageia"}
    ["sdl2"] {os = "openbsd"}
    ["libSDL2-devel"] {os-family = "suse" | os-family = "opensuse"}
    ["SDL2"] {os = "win32" & os-distribution = "cygwinports"}
  ]
}
package "conf-sdl2-image" {
  opam-version: "2.0"
  version: "1"
  synopsis: "Virtual package relying on a sdl2-image system installation"
  description:
    "This package can only install if libsdl2-image is installed on the system."
  maintainer: "https://github.com/ocaml/opam-repository/issues"
  authors: "Sam Lantinga"
  license: "Zlib"
  homepage: "http://www.libsdl.org/projects/SDL_image/"
  bug-reports: "https://github.com/ocaml/opam-repository/issues"
  depends: [
    "conf-pkg-config" {build}
  ]
  flags: conf
  build: ["pkg-config" "SDL2_image"]
  depexts: [
    ["sdl2_image-dev"] {os-distribution = "alpine"}
    ["libsdl2-image-dev"] {os-family = "debian"}
    ["libsdl2-image-dev"] {os-family = "ubuntu"}
    ["SDL2_image-devel"] {os-distribution = "fedora"}
    ["epel-release" "SDL2_image-devel"] {os-distribution = "centos"}
    ["SDL2_image-devel"] {os-distribution = "ol"}
    ["libsdl2_image-devel"] {os-distribution = "mageia"}
    ["libSDL2_image-devel"] {os-family = "suse" | os-family = "opensuse"}
    ["sdl2_image"] {os-distribution = "homebrew" & os = "macos"}
    ["sdl2_image"] {os-family = "arch"}
    ["sdl2-image"] {os-family = "gentoo"}
    ["sdl2_image"] {os = "freebsd"}
  ]
}
package "cppo" {
  opam-version: "2.0"
  version: "1.6.9"
  synopsis: "Code preprocessor like cpp for OCaml"
  description: """\
Cppo is an equivalent of the C preprocessor for OCaml programs.
It allows the definition of simple macros and file inclusion.

Cppo is:

* more OCaml-friendly than cpp
* easy to learn without consulting a manual
* reasonably fast
* simple to install and to maintain"""
  maintainer: [
    "Martin Jambon <martin@mjambon.com>" "Yishuai Li <yishuai@upenn.edu>"
  ]
  authors: "Martin Jambon"
  license: "BSD-3-Clause"
  homepage: "https://github.com/ocaml-community/cppo"
  doc: "https://ocaml-community.github.io/cppo"
  bug-reports: "https://github.com/ocaml-community/cppo/issues"
  depends: [
    "ocaml" {>= "4.02.3"}
    "dune" {>= "1.10"}
    "base-unix"
  ]
  build: [
    ["dune" "subst"] {dev}
    ["dune" "build" "-p" name "-j" jobs]
    ["dune" "runtest" "-p" name "-j" jobs] {with-test}
    ["dune" "build" "-p" name "@doc"] {with-doc}
  ]
  dev-repo: "git+https://github.com/ocaml-community/cppo.git"
  url {
    src: "https://github.com/ocaml-community/cppo/archive/v1.6.9.tar.gz"
    checksum: [
      "md5=d23ffe85ac7dc8f0afd1ddf622770d09"
      "sha512=26ff5a7b7f38c460661974b23ca190f0feae3a99f1974e0fd12ccf08745bd7d91b7bc168c70a5385b837bfff9530e0e4e41cf269f23dd8cf16ca658008244b44"
    ]
  }
}
package "csexp" {
  opam-version: "2.0"
  version: "1.5.2"
  synopsis: "Parsing and printing of S-expressions in Canonical form"
  description: """\
This library provides minimal support for Canonical S-expressions
[1]. Canonical S-expressions are a binary encoding of S-expressions
that is super simple and well suited for communication between
programs.

This library only provides a few helpers for simple applications. If
you need more advanced support, such as parsing from more fancy input
sources, you should consider copying the code of this library given
how simple parsing S-expressions in canonical form is.

To avoid a dependency on a particular S-expression library, the only
module of this library is parameterised by the type of S-expressions.

[1] https://en.wikipedia.org/wiki/Canonical_S-expressions"""
  maintainer: "Jeremie Dimino <jeremie@dimino.org>"
  authors: [
    "Quentin Hocquet <mefyl@gruntech.org>"
    "Jane Street Group, LLC <opensource@janestreet.com>"
    "Jeremie Dimino <jeremie@dimino.org>"
  ]
  license: "MIT"
  homepage: "https://github.com/ocaml-dune/csexp"
  doc: "https://ocaml-dune.github.io/csexp/"
  bug-reports: "https://github.com/ocaml-dune/csexp/issues"
  depends: [
    "dune" {>= "3.4"}
    "ocaml" {>= "4.03.0"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml-dune/csexp.git"
  url {
    src:
      "https://github.com/ocaml-dune/csexp/releases/download/1.5.2/csexp-1.5.2.tbz"
    checksum: [
      "sha256=1a14dd04bb4379a41990248550628c77913a9c07f3c35c1370b6960e697787ff"
      "sha512=be281018bcfc20d4db14894ef51c4b836d6338d2fdfe22e63d46f405f8dea7349e16f1c0ecd65f73d4c85a2a80e618cdbb8c9dafcbb9f229f04f1adca5b1973c"
    ]
  }
  x-commit-hash: "e6c4768e10c61bcb04d09748744dad55602149c6"
}
package "ctypes" {
  opam-version: "2.0"
  version: "0.22.0"
  synopsis: "Combinators for binding to C libraries without writing any C"
  description: """\
ctypes is a library for binding to C libraries using pure OCaml. The primary
aim is to make writing C extensions as straightforward as possible.
The core of ctypes is a set of combinators for describing the structure of C
types -- numeric types, arrays, pointers, structs, unions and functions. You
can use these combinators to describe the types of the functions that you want
to call, then bind directly to those functions -- all without writing or
generating any C!

To install the optional `ctypes-foreign` interface (which uses `libffi` to
provide dynamic access to foreign libraries), you will need to also install
the `ctypes-foreign` package.

    opam install ctypes-foreign

This will make the `ctypes-foreign` ocamlfind subpackage available."""
  maintainer: "Jeremy Yallop <yallop@gmail.com>"
  authors: "Jeremy Yallop"
  license: "MIT"
  tags: "org:mirage"
  homepage: "https://github.com/yallop/ocaml-ctypes"
  doc: "https://yallop.github.io/ocaml-ctypes/"
  bug-reports: "https://github.com/yallop/ocaml-ctypes/issues"
  depends: [
    "dune" {>= "2.9"}
    "ocaml" {>= "4.03.0"}
    "integers"
    "dune-configurator"
    "bigarray-compat"
    "ounit2" {with-test}
    "conf-fts" {with-test & os != "win32"}
    "conf-pkg-config" {with-test}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "--promote-install-files=false"
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
    ["dune" "install" "-p" name "--create-install-files" name]
  ]
  dev-repo: "git+https://github.com/yallop/ocaml-ctypes.git"
  url {
    src:
      "https://github.com/yallop/ocaml-ctypes/archive/refs/tags/0.22.0.tar.gz"
    checksum: "md5=8a301a3e3b79156448a6659859ad506c"
  }
}
package "ctypes-foreign" {
  opam-version: "2.0"
  version: "0.22.0"
  synopsis: "Dynamic access to foreign C libraries using Ctypes"
  description: """\
This installs the `ctypes-foreign` interface which
uses `libffi` to provide dynamic access to foreign libraries."""
  maintainer: "Jeremy Yallop <yallop@gmail.com>"
  authors: "Jeremy Yallop"
  license: "MIT"
  tags: "org:mirage"
  homepage: "https://github.com/yallop/ocaml-ctypes"
  doc: "https://ocamllabs.github.io/ocaml-ctypes/"
  bug-reports: "https://github.com/yallop/ocaml-ctypes/issues"
  depends: [
    "dune" {>= "2.9"}
    "ocaml" {>= "4.03.0"}
    "integers" {with-test & >= "0.2.2"}
    "ctypes" {= version}
    "dune-configurator"
    "conf-pkg-config"
    "lwt" {with-test & >= "2.4.7"}
    "ounit2" {with-test}
    "conf-ncurses" {with-test}
    "stdlib-shims" {with-test}
    "conf-fts" {with-test & os != "win32"}
    "conf-libffi" {>= "2.0.0"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "--promote-install-files=false"
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
    ["dune" "install" "-p" name "--create-install-files" name]
  ]
  dev-repo: "git+https://github.com/yallop/ocaml-ctypes.git"
  url {
    src:
      "https://github.com/yallop/ocaml-ctypes/archive/refs/tags/0.22.0.tar.gz"
    checksum: "md5=8a301a3e3b79156448a6659859ad506c"
  }
}
package "dot-merlin-reader" {
  opam-version: "2.0"
  version: "4.9"
  synopsis: "Reads config files for merlin"
  description: """\
Helper process: reads .merlin files and outputs the normalized content to
  stdout."""
  maintainer: "defree@gmail.com"
  authors: "The Merlin team"
  license: "MIT"
  homepage: "https://github.com/ocaml/merlin"
  bug-reports: "https://github.com/ocaml/merlin/issues"
  depends: [
    "ocaml" {>= "4.08" & < "6.0"}
    "dune" {>= "2.9.0"}
    "merlin-lib" {>= "4.9" & < "4.14"}
    "ocamlfind" {>= "1.6.0"}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["dune" "build" "-p" name "-j" jobs]
  ]
  dev-repo: "git+https://github.com/ocaml/merlin.git"
  url {
    src:
      "https://github.com/ocaml/merlin/releases/download/v4.9-414/merlin-4.9-414.tbz"
    checksum: [
      "sha256=e23fc47813591269ff9d27c820988e520a662c89dd0af7ea652b21517499cbfd"
      "sha512=2199f963368597d10cc197e41ebb883f6a166018c9da3fe259c354550df41b713781003598a2fe5956b0a4ae96f8c07ba33831d3cf6f9d494b731944f87e491e"
    ]
  }
  x-commit-hash: "df75a4550704c113ac29505fd68ef9b7893d4bf5"
}
package "dune" {
  opam-version: "2.0"
  version: "3.14.2"
  synopsis: "Fast, portable, and opinionated build system"
  description: """\
Dune is a build system that was designed to simplify the release of
Jane Street packages. It reads metadata from "dune" files following a
very simple s-expression syntax.

Dune is fast, has very low-overhead, and supports parallel builds on
all platforms. It has no system dependencies; all you need to build
dune or packages using dune is OCaml. You don't need make or bash
as long as the packages themselves don't use bash explicitly.

Dune is composable; supporting multi-package development by simply
dropping multiple repositories into the same directory.

Dune also supports multi-context builds, such as building against
several opam roots/switches simultaneously. This helps maintaining
packages across several versions of OCaml and gives cross-compilation
for free."""
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    ("ocaml" {>= "4.08"} |
     ("ocaml" {>= "4.02" & < "4.08~~"} & "ocamlfind-secondary"))
    "base-unix"
    "base-threads"
  ]
  conflicts: [
    "merlin" {< "3.4.0"}
    "ocaml-lsp-server" {< "1.3.0"}
    "dune-configurator" {< "2.3.0"}
    "odoc" {< "2.0.1"}
    "dune-release" {< "1.3.0"}
    "js_of_ocaml-compiler" {< "3.6.0"}
    "jbuilder" {= "transition"}
  ]
  build: [
    ["ocaml" "boot/bootstrap.ml" "-j" jobs]
    [
      "./_boot/dune.exe"
      "build"
      "dune.install"
      "--release"
      "--profile"
      "dune-bootstrap"
      "-j"
      jobs
    ]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src:
      "https://github.com/ocaml/dune/releases/download/3.14.2/dune-3.14.2.tbz"
    checksum: [
      "sha256=e80867cb362b2749d9d9e0cbab2982f98af1daf4459b81164ca0aac6b4e6ace1"
      "sha512=c60b35de3fe000650eb8d49a44fd9aeb25c6006be15e2c88407882e0f272747abdffc6449f6cfd68b86e233dcbb7ff685fd198635947a991cf0197dd69f489be"
    ]
  }
  x-commit-hash: "b19f6df8954995899e30275055d9582b6c83687c"
}
package "dune-build-info" {
  opam-version: "2.0"
  version: "3.14.2"
  synopsis: "Embed build information inside executable"
  description: """\
The build-info library allows to access information about how the
executable was built, such as the version of the project at which it
was built or the list of statically linked libraries with their
versions.  It supports reporting the version from the version control
system during development to get an precise reference of when the
executable was built."""
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    "dune" {>= "3.12"}
    "ocaml" {>= "4.08"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["rm" "-rf" "vendor/csexp"]
    ["rm" "-rf" "vendor/pp"]
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src:
      "https://github.com/ocaml/dune/releases/download/3.14.2/dune-3.14.2.tbz"
    checksum: [
      "sha256=e80867cb362b2749d9d9e0cbab2982f98af1daf4459b81164ca0aac6b4e6ace1"
      "sha512=c60b35de3fe000650eb8d49a44fd9aeb25c6006be15e2c88407882e0f272747abdffc6449f6cfd68b86e233dcbb7ff685fd198635947a991cf0197dd69f489be"
    ]
  }
  x-commit-hash: "b19f6df8954995899e30275055d9582b6c83687c"
}
package "dune-configurator" {
  opam-version: "2.0"
  version: "3.14.2"
  synopsis: "Helper library for gathering system configuration"
  description: """\
dune-configurator is a small library that helps writing OCaml scripts that
test features available on the system, in order to generate config.h
files for instance.
Among other things, dune-configurator allows one to:
- test if a C program compiles
- query pkg-config
- import #define from OCaml header files
- generate config.h file"""
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    "dune" {>= "3.12"}
    "ocaml" {>= "4.04.0"}
    "base-unix"
    "csexp" {>= "1.5.0"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["rm" "-rf" "vendor/csexp"]
    ["rm" "-rf" "vendor/pp"]
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src:
      "https://github.com/ocaml/dune/releases/download/3.14.2/dune-3.14.2.tbz"
    checksum: [
      "sha256=e80867cb362b2749d9d9e0cbab2982f98af1daf4459b81164ca0aac6b4e6ace1"
      "sha512=c60b35de3fe000650eb8d49a44fd9aeb25c6006be15e2c88407882e0f272747abdffc6449f6cfd68b86e233dcbb7ff685fd198635947a991cf0197dd69f489be"
    ]
  }
  x-commit-hash: "b19f6df8954995899e30275055d9582b6c83687c"
}
package "dune-rpc" {
  opam-version: "2.0"
  version: "3.14.2"
  synopsis: "Communicate with dune using rpc"
  description: "Library to connect and control a running dune instance"
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    "dune" {>= "3.12"}
    "csexp"
    "ordering"
    "dyn"
    "xdg"
    "stdune" {= version}
    "pp" {>= "1.1.0"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["rm" "-rf" "vendor/csexp"]
    ["rm" "-rf" "vendor/pp"]
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src:
      "https://github.com/ocaml/dune/releases/download/3.14.2/dune-3.14.2.tbz"
    checksum: [
      "sha256=e80867cb362b2749d9d9e0cbab2982f98af1daf4459b81164ca0aac6b4e6ace1"
      "sha512=c60b35de3fe000650eb8d49a44fd9aeb25c6006be15e2c88407882e0f272747abdffc6449f6cfd68b86e233dcbb7ff685fd198635947a991cf0197dd69f489be"
    ]
  }
  x-commit-hash: "b19f6df8954995899e30275055d9582b6c83687c"
}
package "dyn" {
  opam-version: "2.0"
  version: "3.14.2"
  synopsis: "Dynamic type"
  description: "Dynamic type"
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    "dune" {>= "3.12"}
    "ocaml" {>= "4.08.0"}
    "ordering" {= version}
    "pp" {>= "1.1.0"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["rm" "-rf" "vendor/csexp"]
    ["rm" "-rf" "vendor/pp"]
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src:
      "https://github.com/ocaml/dune/releases/download/3.14.2/dune-3.14.2.tbz"
    checksum: [
      "sha256=e80867cb362b2749d9d9e0cbab2982f98af1daf4459b81164ca0aac6b4e6ace1"
      "sha512=c60b35de3fe000650eb8d49a44fd9aeb25c6006be15e2c88407882e0f272747abdffc6449f6cfd68b86e233dcbb7ff685fd198635947a991cf0197dd69f489be"
    ]
  }
  x-commit-hash: "b19f6df8954995899e30275055d9582b6c83687c"
}
package "either" {
  opam-version: "2.0"
  version: "1.0.0"
  synopsis: "Compatibility Either module"
  description: """\
Projects that want to use the Either module defined in OCaml 4.12.0 while
staying compatible with older versions of OCaml should use this library
instead."""
  maintainer: "Craig Ferguson <me@craigfe.io>"
  authors: "Craig Ferguson <me@craigfe.io>"
  license: "MIT"
  homepage: "https://github.com/mirage/either"
  doc: "https://mirage.github.io/either"
  bug-reports: "https://github.com/mirage/either/issues"
  depends: [
    "dune" {>= "2.0"}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/mirage/either.git"
  url {
    src:
      "https://github.com/mirage/either/releases/download/1.0.0/either-1.0.0.tbz"
    checksum: [
      "sha256=bf674de3312dee7b7215f07df1e8a96eb3d679164b8a918cdd95b8d97e505884"
      "sha512=147854c09f897dd028b18a9f19acea8666107aaa7b1aab3c92f568af531364f57298edcaf3897d74246d3857d52e9bfb7ad0fc39220d988d9f14694ca1d5e9ed"
    ]
  }
  x-commit-hash: "a270ceac58e3e5bed6fe7e8bfb7132b14ee9c322"
}
package "fiber" {
  opam-version: "2.0"
  version: "3.7.0"
  synopsis: "Dune's monadic structured concurrency library"
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml-dune/fiber"
  bug-reports: "https://github.com/ocaml-dune/fiber/issues"
  depends: [
    "dune" {>= "3.6"}
    "ocaml" {>= "4.08"}
    "ppx_expect" {with-test}
    "dyn"
    "stdune"
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test & ocaml:version >= "4.13"}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/ocaml-dune/fiber.git"
  url {
    src:
      "https://github.com/ocaml-dune/fiber/releases/download/3.7.0/fiber-lwt-3.7.0.tbz"
    checksum: [
      "sha256=8648a15ae93fe6942999ce36887429a3913b62829c4714e520cc0e7a1c3b9682"
      "sha512=348b28b28ffd87de035e90753f677658e8ad58421caf3ac086e4c0bbab8508fa5fe2f55d137c425afaf790ebcf45291e16d70eac5cb766b6d9786f042b58b19b"
    ]
  }
  x-commit-hash: "dd66893a530759da26b66bd1c8939fd77f369afb"
}
package "fix" {
  opam-version: "2.0"
  version: "20230505"
  synopsis:
    "Algorithmic building blocks for memoization, recursion, and more"
  maintainer: "francois.pottier@inria.fr"
  authors: "FranÃ§ois Pottier <francois.pottier@inria.fr>"
  license: "LGPL-2.0-only"
  homepage: "https://gitlab.inria.fr/fpottier/fix"
  bug-reports: "francois.pottier@inria.fr"
  depends: [
    "ocaml" {>= "4.03"}
    "dune" {>= "1.3"}
  ]
  build: ["dune" "build" "-p" name "-j" jobs]
  dev-repo: "git+https://gitlab.inria.fr/fpottier/fix.git"
  url {
    src:
      "https://gitlab.inria.fr/fpottier/fix/-/archive/20230505/archive.tar.gz"
    checksum: [
      "md5=2a4afa633128c5010677222f7b3c9451"
      "sha512=30d446ba6c19aef78b52d9831eb26f8f6ac10e88bd1eff36d16fbbfb32278b2637e31e63a160aec4abbbfdb1e7612ed25d68c936f4cbf2073e51d713ff3a8adf"
    ]
  }
}
package "fpath" {
  opam-version: "2.0"
  version: "0.7.3"
  synopsis: "File system paths for OCaml"
  description: """\
Fpath is an OCaml module for handling file system paths with POSIX or
Windows conventions. Fpath processes paths without accessing the file
system and is independent from any system library.

Fpath depends on [Astring][astring] and is distributed under the ISC
license.

[astring]: http://erratique.ch/software/astring"""
  maintainer: "Daniel BÃ¼nzli <daniel.buenzl i@erratique.ch>"
  authors: "The fpath programmers"
  license: "ISC"
  tags: ["file" "system" "path" "org:erratique"]
  homepage: "https://erratique.ch/software/fpath"
  doc: "https://erratique.ch/software/fpath/doc"
  bug-reports: "https://github.com/dbuenzli/fpath/issues"
  depends: [
    "ocaml" {>= "4.03.0"}
    "ocamlfind" {build}
    "ocamlbuild" {build}
    "topkg" {build & >= "0.9.0"}
    "astring"
  ]
  build: [
    "ocaml"
    "pkg/pkg.ml"
    "build"
    "--dev-pkg=true" {dev}
  ]
  dev-repo: "git+https://erratique.ch/repos/fpath.git"
  url {
    src: "https://erratique.ch/software/fpath/releases/fpath-0.7.3.tbz"
    checksum: "md5=0740b530e8fed5b0adc5eee8463cfc2f"
  }
}
package "integers" {
  opam-version: "2.0"
  version: "0.7.0"
  synopsis: "Various signed and unsigned integer types for OCaml"
  maintainer: "yallop@gmail.com"
  authors: [
    "Jeremy Yallop" "Demi Obenour" "Stephane Glondu" "Andreas Hauptmann"
  ]
  license: "MIT"
  homepage: "https://github.com/yallop/ocaml-integers"
  doc: "http://yallop.github.io/ocaml-integers/api.docdir/"
  bug-reports: "https://github.com/yallop/ocaml-integers/issues"
  depends: [
    "ocaml" {>= "4.03"}
    "dune" {>= "1.0"}
    "stdlib-shims"
  ]
  build: [
    ["dune" "subst"] {dev}
    ["dune" "build" "-p" name "-j" jobs]
    ["dune" "runtest" "-p" name "-j" jobs] {with-test}
  ]
  dev-repo: "git+https://github.com/yallop/ocaml-integers.git"
  url {
    src: "https://github.com/yallop/ocaml-integers/archive/0.7.0.tar.gz"
    checksum: "md5=201cf24143d7cb9a3921d572b6e6c42c"
  }
}
package "menhir" {
  opam-version: "2.0"
  version: "20231231"
  synopsis: "An LR(1) parser generator"
  maintainer: "francois.pottier@inria.fr"
  authors: [
    "FranÃ§ois Pottier <francois.pottier@inria.fr>"
    "Yann RÃ©gis-Gianas <yrg@pps.univ-paris-diderot.fr>"
  ]
  license: "GPL-2.0-only"
  homepage: "http://gitlab.inria.fr/fpottier/menhir"
  bug-reports: "https://gitlab.inria.fr/fpottier/menhir/-/issues"
  depends: [
    "ocaml" {>= "4.03.0"}
    "dune" {>= "2.8.0"}
    "menhirLib" {= version}
    "menhirSdk" {= version}
    "menhirCST" {= version}
  ]
  build: ["dune" "build" "-p" name "-j" jobs]
  dev-repo: "git+https://gitlab.inria.fr/fpottier/menhir.git"
  url {
    src:
      "https://gitlab.inria.fr/fpottier/menhir/-/archive/20231231/archive.tar.gz"
    checksum: [
      "md5=799748bc3b7a542798a85956c7863865"
      "sha512=620ff3443143535e03ac98c5e8ee2ddf9ba48f8cfe441302118def1da3e03ffac7f48d4d4cb129766b625ecad0fb341da1baa0169dee8b6d07a5b0bbb735cf2f"
    ]
  }
}
package "menhirCST" {
  opam-version: "2.0"
  version: "20231231"
  synopsis: "Runtime support library for parsers generated by Menhir"
  maintainer: "francois.pottier@inria.fr"
  authors: "FranÃ§ois Pottier <francois.pottier@inria.fr>"
  license: "LGPL-2.0-only with OCaml-LGPL-linking-exception"
  homepage: "http://gitlab.inria.fr/fpottier/menhir"
  bug-reports: "https://gitlab.inria.fr/fpottier/menhir/-/issues"
  depends: [
    "ocaml" {>= "4.08"}
    "dune" {>= "2.8.0"}
  ]
  conflicts: [
    "menhir" {!= version}
  ]
  build: ["dune" "build" "-p" name "-j" jobs]
  dev-repo: "git+https://gitlab.inria.fr/fpottier/menhir.git"
  url {
    src:
      "https://gitlab.inria.fr/fpottier/menhir/-/archive/20231231/archive.tar.gz"
    checksum: [
      "md5=799748bc3b7a542798a85956c7863865"
      "sha512=620ff3443143535e03ac98c5e8ee2ddf9ba48f8cfe441302118def1da3e03ffac7f48d4d4cb129766b625ecad0fb341da1baa0169dee8b6d07a5b0bbb735cf2f"
    ]
  }
}
package "menhirLib" {
  opam-version: "2.0"
  version: "20231231"
  synopsis: "Runtime support library for parsers generated by Menhir"
  maintainer: "francois.pottier@inria.fr"
  authors: [
    "FranÃ§ois Pottier <francois.pottier@inria.fr>"
    "Yann RÃ©gis-Gianas <yrg@pps.univ-paris-diderot.fr>"
  ]
  license: "LGPL-2.0-only with OCaml-LGPL-linking-exception"
  homepage: "http://gitlab.inria.fr/fpottier/menhir"
  bug-reports: "https://gitlab.inria.fr/fpottier/menhir/-/issues"
  depends: [
    "ocaml" {>= "4.03.0"}
    "dune" {>= "2.8.0"}
  ]
  conflicts: [
    "menhir" {!= version}
  ]
  build: ["dune" "build" "-p" name "-j" jobs]
  dev-repo: "git+https://gitlab.inria.fr/fpottier/menhir.git"
  url {
    src:
      "https://gitlab.inria.fr/fpottier/menhir/-/archive/20231231/archive.tar.gz"
    checksum: [
      "md5=799748bc3b7a542798a85956c7863865"
      "sha512=620ff3443143535e03ac98c5e8ee2ddf9ba48f8cfe441302118def1da3e03ffac7f48d4d4cb129766b625ecad0fb341da1baa0169dee8b6d07a5b0bbb735cf2f"
    ]
  }
}
package "menhirSdk" {
  opam-version: "2.0"
  version: "20231231"
  synopsis: "Compile-time library for auxiliary tools related to Menhir"
  maintainer: "francois.pottier@inria.fr"
  authors: [
    "FranÃ§ois Pottier <francois.pottier@inria.fr>"
    "Yann RÃ©gis-Gianas <yrg@pps.univ-paris-diderot.fr>"
  ]
  license: "LGPL-2.0-only with OCaml-LGPL-linking-exception"
  homepage: "http://gitlab.inria.fr/fpottier/menhir"
  bug-reports: "https://gitlab.inria.fr/fpottier/menhir/-/issues"
  depends: [
    "ocaml" {>= "4.03.0"}
    "dune" {>= "2.8.0"}
  ]
  conflicts: [
    "menhir" {!= version}
  ]
  build: ["dune" "build" "-p" name "-j" jobs]
  dev-repo: "git+https://gitlab.inria.fr/fpottier/menhir.git"
  url {
    src:
      "https://gitlab.inria.fr/fpottier/menhir/-/archive/20231231/archive.tar.gz"
    checksum: [
      "md5=799748bc3b7a542798a85956c7863865"
      "sha512=620ff3443143535e03ac98c5e8ee2ddf9ba48f8cfe441302118def1da3e03ffac7f48d4d4cb129766b625ecad0fb341da1baa0169dee8b6d07a5b0bbb735cf2f"
    ]
  }
}
package "merlin" {
  opam-version: "2.0"
  version: "4.13.1-501"
  synopsis:
    "Editor helper, provides completion, typing and source browsing in Vim and Emacs"
  description:
    "Merlin is an assistant for editing OCaml code. It aims to provide the features available in modern IDEs: error reporting, auto completion, source browsing and much more."
  maintainer: "defree@gmail.com"
  authors: "The Merlin team"
  license: "MIT"
  homepage: "https://github.com/ocaml/merlin"
  bug-reports: "https://github.com/ocaml/merlin/issues"
  depends: [
    "ocaml" {>= "5.1" & < "5.2"}
    "dune" {>= "2.9.0"}
    "merlin-lib" {= version}
    "dot-merlin-reader" {>= "4.9"}
    "yojson" {>= "2.0.0"}
    "conf-jq" {with-test}
    "ppxlib" {with-test}
  ]
  conflicts: [
    "seq" {!= "base"}
    "base-effects"
  ]
  build: [
    ["dune" "subst"] {dev}
    ["dune" "build" "-p" name "-j" jobs]
    ["dune" "runtest" "-p" name "-j" jobs] {with-test}
  ]
  post-messages:
    """\
merlin installed.

Quick setup for VIM
-------------------
Append this to your .vimrc to add merlin to vim's runtime-path:
  let g:opamshare = substitute(system('opam var share'),'\\n$','','''')
  execute "set rtp+=" . g:opamshare . "/merlin/vim"

Also run the following line in vim to index the documentation:
  :execute "helptags " . g:opamshare . "/merlin/vim/doc"

Quick setup for EMACS
-------------------
Add opam emacs directory to your load-path by appending this to your .emacs:
  (let ((opam-share (ignore-errors (car (process-lines "opam" "var" "share")))))
   (when (and opam-share (file-directory-p opam-share))
    ;; Register Merlin
    (add-to-list 'load-path (expand-file-name "emacs/site-lisp" opam-share))
    (autoload 'merlin-mode "merlin" nil t nil)
    ;; Automatically start it in OCaml buffers
    (add-hook 'tuareg-mode-hook 'merlin-mode t)
    (add-hook 'caml-mode-hook 'merlin-mode t)
    ;; Use opam switch to lookup ocamlmerlin binary
    (setq merlin-command 'opam)
    ;; To easily change opam switches within a given Emacs session, you can
    ;; install the minor mode https://github.com/ProofGeneral/opam-switch-mode
    ;; and use one of its "OPSW" menus.
    ))
Take a look at https://github.com/ocaml/merlin for more information

Quick setup with opam-user-setup
--------------------------------

Opam-user-setup support Merlin.

  $ opam user-setup install

should take care of basic setup.
See https://github.com/OCamlPro/opam-user-setup"""
      {success & !user-setup:installed}
  dev-repo: "git+https://github.com/ocaml/merlin.git"
  url {
    src:
      "https://github.com/ocaml/merlin/releases/download/v4.13.1-501/merlin-4.13.1-501.tbz"
    checksum: [
      "sha256=3557e05f70c5b108210291205a294282be4ed964a4c0ab5e9d9645489d70c1ad"
      "sha512=e274ed87affabf2c91db81dafadbc519ddb1da2a2ebbe55d2985d82ea32b93a5651a4e6ac718e5c55d179025efaeb5babdb4cb53080eb2c5a65b147c22bd2719"
    ]
  }
  x-commit-hash: "3dd2198ac1961d0f0c9080b4328461a57af03e89"
}
package "merlin-lib" {
  opam-version: "2.0"
  version: "4.13.1-501"
  synopsis: "Merlin's libraries"
  description: """\
These libraries provides access to low-level compiler interfaces and the
  standard higher-level merlin protocol. The library is provided as-is, is not
  thoroughly documented, and its public API might break with any new release."""
  maintainer: "defree@gmail.com"
  authors: "The Merlin team"
  license: "MIT"
  homepage: "https://github.com/ocaml/merlin"
  bug-reports: "https://github.com/ocaml/merlin/issues"
  depends: [
    "ocaml" {>= "5.1.1" & < "5.2"}
    "dune" {>= "2.9.0"}
    "csexp" {>= "1.5.1"}
    "menhir" {dev & >= "20201216"}
    "menhirLib" {dev & >= "20201216"}
    "menhirSdk" {dev & >= "20201216"}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["dune" "build" "-p" name "-j" jobs]
  ]
  dev-repo: "git+https://github.com/ocaml/merlin.git"
  url {
    src:
      "https://github.com/ocaml/merlin/releases/download/v4.13.1-501/merlin-4.13.1-501.tbz"
    checksum: [
      "sha256=3557e05f70c5b108210291205a294282be4ed964a4c0ab5e9d9645489d70c1ad"
      "sha512=e274ed87affabf2c91db81dafadbc519ddb1da2a2ebbe55d2985d82ea32b93a5651a4e6ac718e5c55d179025efaeb5babdb4cb53080eb2c5a65b147c22bd2719"
    ]
  }
  x-commit-hash: "3dd2198ac1961d0f0c9080b4328461a57af03e89"
}
package "ocaml" {
  opam-version: "2.0"
  version: "5.1.1"
  synopsis: "The OCaml compiler (virtual package)"
  description: """\
This package requires a matching implementation of OCaml,
and polls it to initialise specific variables like `ocaml:native-dynlink`"""
  maintainer: "platform@lists.ocaml.org"
  authors: [
    "Xavier Leroy"
    "Damien Doligez"
    "Alain Frisch"
    "Jacques Garrigue"
    "Didier RÃ©my"
    "JÃ©rÃ´me Vouillon"
  ]
  license: "LGPL-2.1-or-later WITH OCaml-LGPL-linking-exception"
  homepage: "https://ocaml.org"
  bug-reports: "https://github.com/ocaml/opam-repository/issues"
  depends: [
    "ocaml-config" {>= "3"}
    "ocaml-base-compiler" {>= "5.1.1~" & < "5.1.2~"} |
    "ocaml-variants" {>= "5.1.1~" & < "5.1.2~"} |
    "ocaml-system" {>= "5.1.1~" & < "5.1.2~"} |
    "dkml-base-compiler" {>= "5.1.1~" & < "5.1.2~"}
  ]
  flags: conf
  setenv: [
    [CAML_LD_LIBRARY_PATH = "%{_:stubsdir}%"]
    [CAML_LD_LIBRARY_PATH += "%{lib}%/stublibs"]
    [OCAML_TOPLEVEL_PATH = "%{toplevel}%"]
  ]
  build: [
    "ocaml" "%{ocaml-config:share}%/gen_ocaml_config.ml" _:version _:name
  ]
  build-env: [
    [CAML_LD_LIBRARY_PATH = ""]
    [LSAN_OPTIONS = "detect_leaks=0,exitcode=0"]
    [ASAN_OPTIONS = "detect_leaks=0,exitcode=0"]
  ]
}
package "ocaml-base-compiler" {
  opam-version: "2.0"
  version: "5.1.1"
  synopsis: "Official release 5.1.1"
  maintainer: "platform@lists.ocaml.org"
  authors: "Xavier Leroy and many contributors"
  license: "LGPL-2.1-or-later WITH OCaml-LGPL-linking-exception"
  homepage: "https://ocaml.org"
  bug-reports: "https://github.com/ocaml/opam-repository/issues"
  depends: [
    "ocaml" {= "5.1.1" & post}
    "base-unix" {post}
    "base-bigarray" {post}
    "base-threads" {post}
    "base-domains" {post}
    "base-nnp" {post}
    "ocaml-options-vanilla" {post}
    "ocaml-option-bytecode-only"
      {arch != "arm64" & arch != "x86_64" & arch != "s390x" &
       arch != "riscv64"}
  ]
  conflict-class: "ocaml-core-compiler"
  flags: compiler
  setenv: CAML_LD_LIBRARY_PATH = "%{lib}%/stublibs"
  build: [
    [
      "./configure"
      "--prefix=%{prefix}%"
      "--docdir=%{doc}%/ocaml"
      "-C"
      "CC=cc" {os = "openbsd" | os = "macos"}
      "ASPP=cc -c" {os = "openbsd" | os = "macos"}
    ]
    [make "-j%{jobs}%"]
  ]
  install: [make "install"]
  post-messages: [
    """\
A failure in the middle of the build may be caused by build parallelism
   (enabled by default).
   Please file a bug report at https://github.com/ocaml/opam-repository/issues"""
      {failure & jobs > "1"}
    """\
You can try installing again including --jobs=1
   to force a sequential build instead."""
      {failure & jobs > "1" & opam-version >= "2.0.5"}
  ]
  dev-repo: "git+https://github.com/ocaml/ocaml#5.1"
  extra-files: [
    "ocaml-base-compiler.install" "md5=3e969b841df1f51ca448e6e6295cb451"
  ]
  url {
    src: "https://github.com/ocaml/ocaml/archive/5.1.1.tar.gz"
    checksum:
      "sha256=57f7b382b3d71198413ede405d95ef3506f1cdc480cda1dca1e26b37cb090e17"
  }
}
package "ocaml-compiler-libs" {
  opam-version: "2.0"
  version: "v0.12.4"
  synopsis: "OCaml compiler libraries repackaged"
  description: """\
This packages exposes the OCaml compiler libraries repackages under
the toplevel names Ocaml_common, Ocaml_bytecomp, Ocaml_optcomp, ..."""
  maintainer: "Jane Street developers"
  authors: "Jane Street Group, LLC"
  license: "MIT"
  homepage: "https://github.com/janestreet/ocaml-compiler-libs"
  bug-reports: "https://github.com/janestreet/ocaml-compiler-libs/issues"
  depends: [
    "dune" {>= "2.8"}
    "ocaml" {>= "4.04.1" & < "5.2.0"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/janestreet/ocaml-compiler-libs.git"
  url {
    src:
      "https://github.com/janestreet/ocaml-compiler-libs/releases/download/v0.12.4/ocaml-compiler-libs-v0.12.4.tbz"
    checksum: [
      "sha256=4ec9c9ec35cc45c18c7a143761154ef1d7663036a29297f80381f47981a07760"
      "sha512=978dba8dfa61f98fa24fda7a9c26c2e837081f37d1685fe636dc19cfc3278a940cf01a10293504b185c406706bc1008bc54313d50f023bcdea6d5ac6c0788b35"
    ]
  }
  x-commit-hash: "8cd12f18bb7171c2b67d661868c4271fae528d93"
}
package "ocaml-config" {
  opam-version: "2.0"
  version: "3"
  synopsis: "OCaml Switch Configuration"
  description:
    "This package is used by the OCaml package to set-up its variables."
  maintainer: "platform@lists.ocaml.org"
  authors: [
    "Louis Gesbert <louis.gesbert@ocamlpro.com>"
    "David Allsopp <david.allsopp@metastack.com>"
  ]
  license: "ISC"
  homepage: "https://opam.ocaml.org/"
  bug-reports: "https://github.com/ocaml/opam/issues"
  depends: [
    "ocaml-base-compiler" {>= "5.0.0~" | os = "win32"} |
    "ocaml-variants" {>= "5.0.0~" | os = "win32"} |
    "ocaml-system" {>= "5.0.0~" | os = "win32"} |
    "dkml-base-compiler" {>= "4.12.0~"}
  ]
  substs: "gen_ocaml_config.ml"
  extra-files: [
    ["gen_ocaml_config.ml.in" "md5=c0a50fb1f6ffe7a48bf8600e83ae6d38"]
    ["ocaml-config.install" "md5=8e50c5e2517d3463b3aad649748cafd7"]
  ]
}
package "ocaml-lsp-server" {
  opam-version: "2.0"
  version: "1.17.0"
  synopsis: "LSP Server for OCaml"
  description: "An LSP server for OCaml."
  maintainer: "Rudi Grinberg <me@rgrinberg.com>"
  authors: [
    "Andrey Popp <8mayday@gmail.com>"
    "Rusty Key <iam@stfoo.ru>"
    "Louis RochÃ© <louis@louisroche.net>"
    "Oleksiy Golovko <alexei.golovko@gmail.com>"
    "Rudi Grinberg <me@rgrinberg.com>"
    "Sacha Ayoun <sachaayoun@gmail.com>"
    "cannorin <cannorin@gmail.com>"
    "Ulugbek Abdullaev <ulugbekna@gmail.com>"
    "Thibaut Mattio <thibaut.mattio@gmail.com>"
    "Max Lantas <mnxndev@outlook.com>"
  ]
  license: "ISC"
  homepage: "https://github.com/ocaml/ocaml-lsp"
  bug-reports: "https://github.com/ocaml/ocaml-lsp/issues"
  depends: [
    "dune" {>= "3.0"}
    "yojson"
    "re" {>= "1.5.0"}
    "ppx_yojson_conv_lib" {>= "v0.14"}
    "dune-rpc" {>= "3.4.0"}
    "chrome-trace" {>= "3.3.0"}
    "dyn"
    "stdune"
    "fiber" {>= "3.1.1" & < "4.0.0"}
    "xdg"
    "ordering"
    "dune-build-info"
    "spawn"
    "astring"
    "camlp-streams"
    "ppx_expect" {>= "v0.15.0" & with-test}
    "ocamlformat" {with-test & = "0.24.1"}
    "ocamlc-loc" {>= "3.7.0"}
    "uutf" {>= "1.0.2"}
    "pp" {>= "1.1.2"}
    "csexp" {>= "1.5"}
    "ocamlformat-rpc-lib" {>= "0.21.0"}
    "odoc" {with-doc}
    "ocaml" {>= "4.14" & < "5.2"}
    "merlin-lib" {>= "4.9" & < "5.0"}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["dune" "build" "-j" jobs "ocaml-lsp-server.install" "--release"]
  ]
  dev-repo: "git+https://github.com/ocaml/ocaml-lsp.git"
  url {
    src:
      "https://github.com/ocaml/ocaml-lsp/releases/download/1.17.0/lsp-1.17.0.tbz"
    checksum: [
      "sha256=8fb8bbd717eefd2608b4d83458105b660e0de3a1134dc8fc216ae659d4d19600"
      "sha512=6876df760dbcb51f85e7fd9d08cc8498c69ede38a52f4e12407187da3fbd9657c71f3223f9490ad97edd5259cfdeb2819d943db65bb9ce3c2a18dace3b65ffa8"
    ]
  }
  x-commit-hash: "d3d8de5a4213c2a16e43ac4f87cbbe88a894d05f"
}
package "ocaml-lua" {
  opam-version: "2.0"
  version: "1.8"
  synopsis: "Lua bindings"
  description: """\
Lua is a powerful, light-weight programming language designed for
extending applications. It provides a good general purpose programming
language to replace DSL that don't really need to be specific.

This library provides bindings to Lua API which allows the application
to exchange data with Lua programs and also to extend Lua with OCaml
functions.

[Lua homepage](http://www.lua.org)"""
  maintainer: "p.donadeo@gmail.com"
  authors: ["Paolo Donadeo" "Sylvain Le Gall"]
  license: "MIT"
  homepage: "https://pdonadeo.github.io/ocaml-lua/"
  bug-reports: "https://github.com/pdonadeo/ocaml-lua/issues"
  depends: [
    "ocaml" {>= "4.08.0"}
    "dune" {>= "1.11"}
    "odoc" {with-doc}
  ]
  build: [
    ["sh" "-c" "cd src/lua_c ; tar xf lua-5.1.5.tar.gz"]
    ["sh" "-c" "cd src/lua_c/lua-5.1.5 ; patch -p1 -i ../lua.patch"]
    ["sh" "-c" "cd src/lua_c ; mv lua-5.1.5 lua515"]
    ["dune" "build" "-p" name "-j" jobs "@install"]
    ["dune" "build" "-p" name "-j" jobs "@doc"] {with-doc}
  ]
  dev-repo: "git+https://github.com/pdonadeo/ocaml-lua.git"
  url {
    src: "https://github.com/pdonadeo/ocaml-lua/archive/v1.8.tar.gz"
    checksum: "md5=f5fd56bd53f8e87818cb18137304e415"
  }
}
package "ocaml-options-vanilla" {
  opam-version: "2.0"
  version: "1"
  synopsis: "Ensure that OCaml is compiled with no special options enabled"
  maintainer: "platform@lists.ocaml.org"
  depends: [
    "ocaml-base-compiler" {post} | "ocaml-system" {post} |
    "ocaml-variants" {post & >= "4.12.0~"}
  ]
  conflicts: [
    "ocaml-option-32bit"
    "ocaml-option-afl"
    "ocaml-option-bytecode-only" {arch = "arm64" | arch = "x86_64"}
    "ocaml-option-default-unsafe-string"
    "ocaml-option-flambda"
    "ocaml-option-fp"
    "ocaml-option-musl"
    "ocaml-option-no-flat-float-array"
    "ocaml-option-no-compression"
    "ocaml-option-spacetime"
    "ocaml-option-static"
    "ocaml-option-nnp"
    "ocaml-option-nnpchecker"
    "ocaml-option-address-sanitizer"
    "ocaml-option-leak-sanitizer"
    "ocaml-option-tsan"
  ]
  flags: compiler
}
package "ocaml-version" {
  opam-version: "2.0"
  version: "3.6.4"
  synopsis: "Manipulate, parse and generate OCaml compiler version strings"
  description: """\
This library provides facilities to parse version numbers of the OCaml compiler, and enumerates the various official OCaml releases and configuration variants.

OCaml version numbers are of the form `major.minor.patch+extra`, where the `patch` and `extra` fields are optional.  This library offers the following functionality:

- Functions to parse and serialise OCaml compiler version numbers.
- Enumeration of official OCaml compiler version releases.
- Test compiler versions for a particular feature (e.g. the `bytes` type)
- [opam](https://opam.ocaml.org) compiler switch enumeration.

### Further information

- **Discussion:** Post on <https://discuss.ocaml.org/> with the `ocaml` tag under the Ecosystem category.
- **Bugs:** <https://github.com/ocurrent/ocaml-version/issues>
- **Docs:** <http://docs.mirage.io/ocaml-version>"""
  maintainer: "Anil Madhavapeddy <anil@recoil.org>"
  authors: "Anil Madhavapeddy <anil@recoil.org>"
  license: "ISC"
  tags: "org:ocamllabs"
  homepage: "https://github.com/ocurrent/ocaml-version"
  doc: "https://ocurrent.github.io/ocaml-version/doc"
  bug-reports: "https://github.com/ocurrent/ocaml-version/issues"
  depends: [
    "dune" {>= "3.6"}
    "ocaml" {>= "4.07.0"}
    "alcotest" {with-test}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/ocurrent/ocaml-version.git"
  url {
    src:
      "https://github.com/ocurrent/ocaml-version/releases/download/v3.6.4/ocaml-version-3.6.4.tbz"
    checksum: [
      "sha256=270bcebfe43881ebc09c897bde5ea3b90737b7673ee4100f8c0c6cff321872dc"
      "sha512=bc431d9984c6341a08ca8ce68dcead9cbf6a7954aa10966b32ba1d8df0beb363d1ecfcff373b7afc3b301a681dd131fe588bfdb965f2c983db6061f361fec40a"
    ]
  }
  x-commit-hash: "bf2f60c037aa84c41a38f0275c87df9e822d99e2"
}
package "ocamlbuild" {
  opam-version: "2.0"
  version: "0.14.3"
  synopsis:
    "OCamlbuild is a build system with builtin rules to easily build most OCaml projects"
  maintainer: "Gabriel Scherer <gabriel.scherer@gmail.com>"
  authors: ["Nicolas Pouillard" "Berke Durak"]
  license: "LGPL-2.0-or-later WITH OCaml-LGPL-linking-exception"
  homepage: "https://github.com/ocaml/ocamlbuild/"
  doc: "https://github.com/ocaml/ocamlbuild/blob/master/manual/manual.adoc"
  bug-reports: "https://github.com/ocaml/ocamlbuild/issues"
  depends: [
    "ocaml" {>= "4.03"}
  ]
  conflicts: [
    "base-ocamlbuild"
    "ocamlfind" {< "1.6.2"}
  ]
  available: os != "win32"
  build: [
    [
      make
      "-f"
      "configure.make"
      "all"
      "OCAMLBUILD_PREFIX=%{prefix}%"
      "OCAMLBUILD_BINDIR=%{bin}%"
      "OCAMLBUILD_LIBDIR=%{lib}%"
      "OCAMLBUILD_MANDIR=%{man}%"
      "OCAML_NATIVE=%{ocaml:native}%"
      "OCAML_NATIVE_TOOLS=%{ocaml:native}%"
    ]
    [make "check-if-preinstalled" "all" "opam-install"]
  ]
  dev-repo: "git+https://github.com/ocaml/ocamlbuild.git"
  url {
    src:
      "https://github.com/ocaml/ocamlbuild/archive/refs/tags/0.14.3.tar.gz"
    checksum: [
      "md5=220df59060c916e8aac2eb471c870485"
      "sha512=def8fa1d5488905fda31f72b7f6f0ebdccefa55a8e984a6ea4a7c1e0856e8ea1f7814410202e0f7f7d5e72aca7e8ae0d6623f7f2bade78b0dd82155de76ec4e5"
    ]
  }
}
package "ocamlc-loc" {
  opam-version: "2.0"
  version: "3.14.2"
  synopsis: "Parse ocaml compiler output into structured form"
  description:
    "This library offers no backwards compatibility guarantees. Use at your own risk."
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    "dune" {>= "3.12"}
    "ocaml" {>= "4.08.0"}
    "dyn" {= version}
    "odoc" {with-doc}
  ]
  conflicts: [
    "ocaml-lsp-server" {< "1.15.0"}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["rm" "-rf" "vendor/csexp"]
    ["rm" "-rf" "vendor/pp"]
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src:
      "https://github.com/ocaml/dune/releases/download/3.14.2/dune-3.14.2.tbz"
    checksum: [
      "sha256=e80867cb362b2749d9d9e0cbab2982f98af1daf4459b81164ca0aac6b4e6ace1"
      "sha512=c60b35de3fe000650eb8d49a44fd9aeb25c6006be15e2c88407882e0f272747abdffc6449f6cfd68b86e233dcbb7ff685fd198635947a991cf0197dd69f489be"
    ]
  }
  x-commit-hash: "b19f6df8954995899e30275055d9582b6c83687c"
}
package "ocamlfind" {
  opam-version: "2.0"
  version: "1.9.6"
  synopsis: "A library manager for OCaml"
  description: """\
Findlib is a library manager for OCaml. It provides a convention how
to store libraries, and a file format ("META") to describe the
properties of libraries. There is also a tool (ocamlfind) for
interpreting the META files, so that it is very easy to use libraries
in programs and scripts."""
  maintainer: "Thomas Gazagnaire <thomas@gazagnaire.org>"
  authors: "Gerd Stolpmann <gerd@gerd-stolpmann.de>"
  license: "MIT"
  homepage: "http://projects.camlcity.org/projects/findlib.html"
  bug-reports: "https://github.com/ocaml/ocamlfind/issues"
  depends: [
    "ocaml" {>= "3.08.0"}
  ]
  depopts: ["graphics"]
  available: os != "win32"
  build: [
    [
      "./configure"
      "-bindir"
      bin
      "-sitelib"
      lib
      "-mandir"
      man
      "-config"
      "%{lib}%/findlib.conf"
      "-no-custom"
      "-no-camlp4" {!ocaml:preinstalled & ocaml:version >= "4.02.0"}
      "-no-topfind" {ocaml:preinstalled}
    ]
    [make "all"]
    [make "opt"] {ocaml:native}
  ]
  install: [
    [make "install"]
    ["install" "-m" "0755" "ocaml-stub" "%{bin}%/ocaml"] {ocaml:preinstalled}
  ]
  patches: "0001-Harden-test-for-OCaml-5.patch"
  dev-repo: "git+https://github.com/ocaml/ocamlfind.git"
  extra-files: [
    "0001-Harden-test-for-OCaml-5.patch"
    "md5=3cddbf72164c29d4e50e077a92a37c6c"
  ]
  url {
    src: "http://download.camlcity.org/download/findlib-1.9.6.tar.gz"
    checksum: [
      "md5=96c6ee50a32cca9ca277321262dbec57"
      "sha512=cfaf1872d6ccda548f07d32cc6b90c3aafe136d2aa6539e03143702171ee0199add55269bba894c77115535dc46a5835901a5d7c75768999e72db503bfd83027"
    ]
  }
}
package "ocamlformat" {
  opam-version: "2.0"
  version: "0.26.1"
  synopsis: "Auto-formatter for OCaml code"
  description: """\
**ocamlformat** is a code formatter for OCaml. It comes with opinionated default settings but is also fully customizable to suit your coding style.

- **Profiles:** ocamlformat offers profiles we predefined formatting configurations. Profiles include `default`, `ocamlformat`, `janestreet`.
- **Configurable:** Users can change the formatting profile and configure every option in their `.ocamlformat` configuration file.
- **Format Comments:** ocamlformat can format comments, docstrings, and even code blocks in your comments.
- **RPC:** ocamlformat provides an RPC server that can be used by other tools to easily format OCaml Code."""
  maintainer: [
    "Guillaume Petiot <guillaume@tarides.com>"
    "Jules Aguillon <jules@j3s.fr>"
    "Emile Trotignon <emile@tarides.com>"
  ]
  authors: [
    "Josh Berdine <jjb@fb.com>"
    "Hugo Heuzard <hugo.heuzard@gmail.com>"
    "Etienne Millon <etienne@tarides.com>"
    "Guillaume Petiot <guillaume@tarides.com>"
    "Jules Aguillon <jules@j3s.fr>"
  ]
  license: ["MIT" "LGPL-2.1-only WITH OCaml-LGPL-linking-exception"]
  homepage: "https://github.com/ocaml-ppx/ocamlformat"
  bug-reports: "https://github.com/ocaml-ppx/ocamlformat/issues"
  depends: [
    "ocaml" {>= "4.08" & < "5.2"}
    "cmdliner" {with-test = "false" & >= "1.1.0" | with-test & >= "1.2.0"}
    "dune" {>= "2.8"}
    "ocamlformat-lib" {= version}
    "ocamlformat-rpc-lib" {with-test & = version}
    "re" {>= "1.10.3"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/ocaml-ppx/ocamlformat.git"
  url {
    src:
      "https://github.com/ocaml-ppx/ocamlformat/releases/download/0.26.1/ocamlformat-0.26.1.tbz"
    checksum: [
      "sha256=da006e427f15b9ec612fb808d446599bd9b7c3ee25abeb3d555747a70d74c6d7"
      "sha512=b7413f8dc47ba3a2372e89d59cae54f9a602ab81e31cd14ed986a831111080b79a5a3cc45dac04d8ffae5054c35bf29fe9559f145c76c87a30e191ed5400942a"
    ]
  }
  x-commit-hash: "6734dfc1992eb782f0a936ce3cd7c78b7c1d39d3"
}
package "ocamlformat-lib" {
  opam-version: "2.0"
  version: "0.26.1"
  synopsis: "OCaml Code Formatter"
  description:
    "OCamlFormat is a tool to automatically format OCaml code in a uniform style."
  maintainer: [
    "Guillaume Petiot <guillaume@tarides.com>"
    "Jules Aguillon <jules@j3s.fr>"
    "Emile Trotignon <emile@tarides.com>"
  ]
  authors: [
    "Josh Berdine <jjb@fb.com>"
    "Hugo Heuzard <hugo.heuzard@gmail.com>"
    "Etienne Millon <etienne@tarides.com>"
    "Guillaume Petiot <guillaume@tarides.com>"
    "Jules Aguillon <jules@j3s.fr>"
  ]
  license: ["MIT" "LGPL-2.1-only WITH OCaml-LGPL-linking-exception"]
  homepage: "https://github.com/ocaml-ppx/ocamlformat"
  bug-reports: "https://github.com/ocaml-ppx/ocamlformat/issues"
  depends: [
    "ocaml" {>= "4.08" & < "5.2"}
    "alcotest" {with-test & >= "1.3.0"}
    "base" {>= "v0.12.0"}
    "dune" {>= "2.8"}
    "dune-build-info"
    "either"
    "fix"
    "fpath"
    "menhir" {>= "20201216"}
    "menhirLib" {>= "20201216"}
    "menhirSdk" {>= "20201216"}
    "ocaml-version" {>= "3.5.0"}
    "ocamlformat-rpc-lib" {with-test & = version}
    "ocp-indent" {with-test = "false" & >= "1.8.0" | with-test & >= "1.8.1"}
    "stdio"
    "uuseg" {>= "10.0.0"}
    "uutf" {>= "1.0.1"}
    "csexp" {>= "1.4.0"}
    "astring"
    "result"
    "camlp-streams"
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/ocaml-ppx/ocamlformat.git"
  url {
    src:
      "https://github.com/ocaml-ppx/ocamlformat/releases/download/0.26.1/ocamlformat-0.26.1.tbz"
    checksum: [
      "sha256=da006e427f15b9ec612fb808d446599bd9b7c3ee25abeb3d555747a70d74c6d7"
      "sha512=b7413f8dc47ba3a2372e89d59cae54f9a602ab81e31cd14ed986a831111080b79a5a3cc45dac04d8ffae5054c35bf29fe9559f145c76c87a30e191ed5400942a"
    ]
  }
  x-commit-hash: "6734dfc1992eb782f0a936ce3cd7c78b7c1d39d3"
}
package "ocamlformat-rpc-lib" {
  opam-version: "2.0"
  version: "0.26.1"
  synopsis: "Auto-formatter for OCaml code (RPC mode)"
  description:
    "OCamlFormat is a tool to automatically format OCaml code in a uniform style. This package defines a RPC interface to OCamlFormat"
  maintainer: [
    "Guillaume Petiot <guillaume@tarides.com>"
    "Jules Aguillon <jules@j3s.fr>"
    "Emile Trotignon <emile@tarides.com>"
  ]
  authors: [
    "Josh Berdine <jjb@fb.com>"
    "Hugo Heuzard <hugo.heuzard@gmail.com>"
    "Etienne Millon <etienne@tarides.com>"
    "Guillaume Petiot <guillaume@tarides.com>"
    "Jules Aguillon <jules@j3s.fr>"
  ]
  license: "MIT"
  homepage: "https://github.com/ocaml-ppx/ocamlformat"
  bug-reports: "https://github.com/ocaml-ppx/ocamlformat/issues"
  depends: [
    "dune" {>= "2.8"}
    "ocaml" {>= "4.08"}
    "csexp" {>= "1.4.0"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/ocaml-ppx/ocamlformat.git"
  url {
    src:
      "https://github.com/ocaml-ppx/ocamlformat/releases/download/0.26.1/ocamlformat-0.26.1.tbz"
    checksum: [
      "sha256=da006e427f15b9ec612fb808d446599bd9b7c3ee25abeb3d555747a70d74c6d7"
      "sha512=b7413f8dc47ba3a2372e89d59cae54f9a602ab81e31cd14ed986a831111080b79a5a3cc45dac04d8ffae5054c35bf29fe9559f145c76c87a30e191ed5400942a"
    ]
  }
  x-commit-hash: "6734dfc1992eb782f0a936ce3cd7c78b7c1d39d3"
}
package "ocp-indent" {
  opam-version: "2.0"
  version: "1.8.1"
  synopsis: "A simple tool to indent OCaml programs"
  description: """\
Ocp-indent is based on an approximate, tolerant OCaml parser and a simple stack
machine ; this is much faster and more reliable than using regexps. Presets and
configuration options available, with the possibility to set them project-wide.
Supports most common syntax extensions, and extensible for others.

Includes:
- An indentor program, callable from the command-line or from within editors
- Bindings for popular editors
- A library that can be directly used by editor writers, or just for
  fault-tolerant/approximate parsing."""
  maintainer: "contact@ocamlpro.com"
  authors: [
    "Louis Gesbert <louis.gesbert@ocamlpro.com>"
    "Thomas Gazagnaire <thomas@gazagnaire.org>"
    "Jun Furuse"
  ]
  license: "LGPL-2.1-only WITH OCaml-LGPL-linking-exception"
  tags: ["org:ocamlpro" "org:typerex"]
  homepage: "http://www.typerex.org/ocp-indent.html"
  bug-reports: "https://github.com/OCamlPro/ocp-indent/issues"
  depends: [
    "ocaml"
    "dune" {>= "1.0"}
    "cmdliner" {>= "1.0.0"}
    "ocamlfind"
    "base-bytes"
  ]
  build: ["dune" "build" "-p" name "-j" jobs]
  run-test: ["dune" "runtest" "-p" name "-j" jobs]
  post-messages:
    """\
This package requires additional configuration for use in editors. Install package 'user-setup', or manually:

* for Emacs, add these lines to ~/.emacs:
  (add-to-list 'load-path "%{share}%/emacs/site-lisp")
  (require 'ocp-indent)

* for Vim, add this line to ~/.vimrc:
  set rtp^="%{share}%/ocp-indent/vim\""""
      {success & !user-setup:installed}
  dev-repo: "git+https://github.com/OCamlPro/ocp-indent.git"
  url {
    src: "https://github.com/OCamlPro/ocp-indent/archive/1.8.1.tar.gz"
    checksum: [
      "md5=70db6649a8c08a682ad63730c9752e31"
      "sha512=565353de333dd44375366fff75e85a6256c3cd9ff52b3db79803141f975e77cda04dfe32f5e0f2d4c82c59be8f04e9c2bf4d066b113b2cdf267f4c3dcfa401da"
    ]
  }
}
package "ordering" {
  opam-version: "2.0"
  version: "3.14.2"
  synopsis: "Element ordering"
  description: "Element ordering"
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    "dune" {>= "3.12"}
    "ocaml" {>= "4.08.0"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["rm" "-rf" "vendor/csexp"]
    ["rm" "-rf" "vendor/pp"]
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src:
      "https://github.com/ocaml/dune/releases/download/3.14.2/dune-3.14.2.tbz"
    checksum: [
      "sha256=e80867cb362b2749d9d9e0cbab2982f98af1daf4459b81164ca0aac6b4e6ace1"
      "sha512=c60b35de3fe000650eb8d49a44fd9aeb25c6006be15e2c88407882e0f272747abdffc6449f6cfd68b86e233dcbb7ff685fd198635947a991cf0197dd69f489be"
    ]
  }
  x-commit-hash: "b19f6df8954995899e30275055d9582b6c83687c"
}
package "pp" {
  opam-version: "2.0"
  version: "1.2.0"
  synopsis: "Pretty-printing library"
  description: """\
This library provides a lean alternative to the Format [1] module of
the OCaml standard library. It aims to make it easy for users to do
the right thing. If you have tried Format before but find its API
complicated and difficult to use, then Pp might be a good choice for
you.

Pp uses the same concepts of boxes and break hints, and the final
rendering is done to formatter from the Format module. However it
defines its own algebra which some might find easier to work with and
reason about. No previous knowledge is required to start using this
library, however the various guides for the Format module such as this
one [2] should be applicable to Pp as well.

[1]: https://caml.inria.fr/pub/docs/manual-ocaml/libref/Format.html
[2]: http://caml.inria.fr/resources/doc/guides/format.en.html"""
  maintainer: "Jeremie Dimino <jeremie@dimino.org>"
  authors: [
    "Jane Street Group, LLC <opensource@janestreet.com>"
    "Jeremie Dimino <jeremie@dimino.org>"
  ]
  license: "MIT"
  homepage: "https://github.com/ocaml-dune/pp"
  doc: "https://ocaml-dune.github.io/pp/"
  bug-reports: "https://github.com/ocaml-dune/pp/issues"
  depends: [
    "dune" {>= "2.8"}
    "ocaml" {>= "4.08.0"}
    "ppx_expect" {with-test}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/ocaml-dune/pp.git"
  url {
    src:
      "https://github.com/ocaml-dune/pp/releases/download/1.2.0/pp-1.2.0.tbz"
    checksum: [
      "sha256=a5e822573c55afb42db29ec56eacd1f2acd8f65cf2df2878e291de374ce6909c"
      "sha512=912164c2aa7241d73f735dadfbefe8ed0138d241579d2e885440e068fac78eb9f0b3d782c2420e757e313168c1725daff6ab91800dd315b1e05288456998b40a"
    ]
  }
  x-commit-hash: "83b68c740f21acdcfe54436355ab328372871357"
}
package "ppx_derivers" {
  opam-version: "2.0"
  version: "1.2.1"
  synopsis: "Shared [@@deriving] plugin registry"
  description: """\
Ppx_derivers is a tiny package whose sole purpose is to allow
ppx_deriving and ppx_type_conv to inter-operate gracefully when linked
as part of the same ocaml-migrate-parsetree driver."""
  maintainer: "jeremie@dimino.org"
  authors: "JÃ©rÃ©mie Dimino"
  license: "BSD-3-Clause"
  homepage: "https://github.com/ocaml-ppx/ppx_derivers"
  bug-reports: "https://github.com/ocaml-ppx/ppx_derivers/issues"
  depends: ["ocaml" "dune"]
  build: ["dune" "build" "-p" name "-j" jobs]
  dev-repo: "git+https://github.com/ocaml-ppx/ppx_derivers.git"
  url {
    src: "https://github.com/ocaml-ppx/ppx_derivers/archive/1.2.1.tar.gz"
    checksum: "md5=5dc2bf130c1db3c731fe0fffc5648b41"
  }
}
package "ppx_deriving" {
  opam-version: "2.0"
  version: "5.2.1"
  synopsis: "Type-driven code generation for OCaml"
  description: """\
ppx_deriving provides common infrastructure for generating
code based on type definitions, and a set of useful plugins
for common tasks."""
  maintainer: "whitequark <whitequark@whitequark.org>"
  authors: "whitequark <whitequark@whitequark.org>"
  license: "MIT"
  tags: "syntax"
  homepage: "https://github.com/ocaml-ppx/ppx_deriving"
  doc: "https://ocaml-ppx.github.io/ppx_deriving/"
  bug-reports: "https://github.com/ocaml-ppx/ppx_deriving/issues"
  depends: [
    "ocaml" {>= "4.05.0"}
    "dune" {>= "1.6.3"}
    "cppo" {build & >= "1.1.0"}
    "ocamlfind"
    "ppx_derivers"
    "ppxlib" {>= "0.20.0"}
    "result"
    "ounit2" {with-test}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["dune" "build" "-p" name "-j" jobs]
    ["dune" "runtest" "-p" name "-j" jobs]
      {with-test & ocaml:version < "5.0.0"}
    ["dune" "build" "@doc" "-p" name "-j" jobs] {with-doc}
  ]
  dev-repo: "git+https://github.com/ocaml-ppx/ppx_deriving.git"
  url {
    src:
      "https://github.com/ocaml-ppx/ppx_deriving/releases/download/v5.2.1/ppx_deriving-v5.2.1.tbz"
    checksum: [
      "sha256=e96b5fb25b7632570e4b329e22e097fcd4b8e8680d1e43ef003a8fbd742b0786"
      "sha512=f28cd778a2d48ababa53f73131b25229a11b03685610d020b7b9228b1e25570891cd927b37475aeda49be72debaf5f2dda4c1518a0965db7a361c0ebe325a8d2"
    ]
  }
  x-commit-hash: "7211546d6527bf57d3eff8174c90fc3c22250dae"
}
package "ppx_yojson_conv_lib" {
  opam-version: "2.0"
  version: "v0.16.0"
  synopsis: "Runtime lib for ppx_yojson_conv"
  description: "Part of the Jane Street's PPX rewriters collection."
  maintainer: "Jane Street developers"
  authors: "Jane Street Group, LLC"
  license: "MIT"
  homepage: "https://github.com/janestreet/ppx_yojson_conv_lib"
  doc:
    "https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_yojson_conv_lib/index.html"
  bug-reports: "https://github.com/janestreet/ppx_yojson_conv_lib/issues"
  depends: [
    "ocaml" {>= "4.14.0"}
    "dune" {>= "2.0.0"}
    "yojson" {>= "1.7.0"}
  ]
  build: ["dune" "build" "-p" name "-j" jobs]
  dev-repo: "git+https://github.com/janestreet/ppx_yojson_conv_lib.git"
  url {
    src:
      "https://ocaml.janestreet.com/ocaml-core/v0.16/files/ppx_yojson_conv_lib-v0.16.0.tar.gz"
    checksum:
      "sha256=557c43c88d365b4cbb514d809f1eecc54d7b9976b0669bc55b02169e6c86ec7d"
  }
}
package "ppxlib" {
  opam-version: "2.0"
  version: "0.32.0"
  synopsis: "Standard infrastructure for ppx rewriters"
  description: """\
Ppxlib is the standard infrastructure for ppx rewriters
and other programs that manipulate the in-memory representation of
OCaml programs, a.k.a the "Parsetree".

It also comes bundled with two ppx rewriters that are commonly used to
write tools that manipulate and/or generate Parsetree values;
`ppxlib.metaquot` which allows to construct Parsetree values using the
OCaml syntax directly and `ppxlib.traverse` which provides various
ways of automatically traversing values of a given type, in particular
allowing to inject a complex structured value into generated code."""
  maintainer: "opensource@janestreet.com"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml-ppx/ppxlib"
  doc: "https://ocaml-ppx.github.io/ppxlib/"
  bug-reports: "https://github.com/ocaml-ppx/ppxlib/issues"
  depends: [
    "dune" {>= "2.7"}
    "ocaml" {>= "4.04.1" & < "5.2.0" & != "5.1.0~alpha1"}
    "ocaml-compiler-libs" {>= "v0.11.0"}
    "ppx_derivers" {>= "1.0"}
    "sexplib0" {>= "v0.12"}
    "sexplib0" {with-test & >= "v0.15"}
    "stdlib-shims"
    "ocamlfind" {with-test}
    "re" {with-test & >= "1.9.0"}
    "cinaps" {with-test & >= "v0.12.1"}
    "odoc" {with-doc}
  ]
  conflicts: [
    "ocaml-migrate-parsetree" {< "2.0.0"}
    "base-effects"
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/ocaml-ppx/ppxlib.git"
  url {
    src:
      "https://github.com/ocaml-ppx/ppxlib/releases/download/0.32.0/ppxlib-0.32.0.tbz"
    checksum: [
      "sha256=507cc73ccf895f22eeb5257a2243838c18a38a09105fcff55eeef9148555422b"
      "sha512=73fef8ab8761bfbfde6ae87cc51eaacc5a5c937f0d628a890f0abdb2bffbf073932c25287a9e3baa2a1947c37f3dfa7f83ddd33c440e2e800971015addc97cd2"
    ]
  }
  x-commit-hash: "ad46a4c87f99a44dc70b2ec4c42caec2ccacc3c3"
}
package "re" {
  opam-version: "2.0"
  version: "1.11.0"
  synopsis: "RE is a regular expression library for OCaml"
  description: """\
Pure OCaml regular expressions with:
* Perl-style regular expressions (module Re.Perl)
* Posix extended regular expressions (module Re.Posix)
* Emacs-style regular expressions (module Re.Emacs)
* Shell-style file globbing (module Re.Glob)
* Compatibility layer for OCaml's built-in Str module (module Re.Str)"""
  maintainer: "rudi.grinberg@gmail.com"
  authors: [
    "Jerome Vouillon"
    "Thomas Gazagnaire"
    "Anil Madhavapeddy"
    "Rudi Grinberg"
    "Gabriel Radanne"
  ]
  license: "LGPL-2.1-or-later WITH OCaml-LGPL-linking-exception"
  homepage: "https://github.com/ocaml/ocaml-re"
  bug-reports: "https://github.com/ocaml/ocaml-re/issues"
  depends: [
    "ocaml" {>= "4.03"}
    "dune" {>= "2.0"}
    "ounit" {with-test}
    "seq"
  ]
  build: [
    ["dune" "subst"] {dev}
    ["dune" "build" "-p" name "-j" jobs]
    ["dune" "runtest" "-p" name "-j" jobs] {with-test}
  ]
  dev-repo: "git+https://github.com/ocaml/ocaml-re.git"
  url {
    src:
      "https://github.com/ocaml/ocaml-re/releases/download/1.11.0/re-1.11.0.tbz"
    checksum: [
      "sha256=01fc244780c0f6be72ae796b1fb750f367de18624fd75d07ee79782ed6df8d4f"
      "sha512=3e3712cc1266ec1f27620f3508ea2ebba338f4083b07d8a69dccee1facfdc1971a6c39f9deea664d2a62fd7f2cfd2eae816ca4c274acfadaee992a3befc4b757"
    ]
  }
  x-commit-hash: "2dd38515c76c40299596d39f18d9b9a20f00d788"
}
package "result" {
  opam-version: "2.0"
  version: "1.5"
  synopsis: "Compatibility Result module"
  description: """\
Projects that want to use the new result type defined in OCaml >= 4.03
while staying compatible with older version of OCaml should use the
Result module defined in this library."""
  maintainer: "Jane Street developers"
  authors: "Jane Street Group, LLC"
  license: "BSD-3-Clause"
  homepage: "https://github.com/janestreet/result"
  bug-reports: "https://github.com/janestreet/result/issues"
  depends: [
    "ocaml"
    "dune" {>= "1.0"}
  ]
  build: ["dune" "build" "-p" name "-j" jobs]
  dev-repo: "git+https://github.com/janestreet/result.git"
  url {
    src:
      "https://github.com/janestreet/result/releases/download/1.5/result-1.5.tbz"
    checksum: "md5=1b82dec78849680b49ae9a8a365b831b"
  }
}
package "seq" {
  opam-version: "2.0"
  version: "base"
  synopsis:
    "Compatibility package for OCaml's standard iterator type starting from 4.07."
  maintainer: " "
  authors: " "
  homepage: " "
  bug-reports: "https://caml.inria.fr/mantis/main_page.php"
  depends: [
    "ocaml" {>= "4.07.0"}
  ]
  dev-repo: "git+https://github.com/ocaml/ocaml.git"
  extra-files: [
    ["seq.install" "md5=026b31e1df290373198373d5aaa26e42"]
    ["META.seq" "md5=b33c8a1a6c7ed797816ce27df4855107"]
  ]
}
package "sexplib0" {
  opam-version: "2.0"
  version: "v0.16.0"
  synopsis:
    "Library containing the definition of S-expressions and some base converters"
  description: """\
Part of Jane Street's Core library
The Core suite of libraries is an industrial strength alternative to
OCaml's standard library that was developed by Jane Street, the
largest industrial user of OCaml."""
  maintainer: "Jane Street developers"
  authors: "Jane Street Group, LLC"
  license: "MIT"
  homepage: "https://github.com/janestreet/sexplib0"
  doc:
    "https://ocaml.janestreet.com/ocaml-core/latest/doc/sexplib0/index.html"
  bug-reports: "https://github.com/janestreet/sexplib0/issues"
  depends: [
    "ocaml" {>= "4.08.0"}
    "dune" {>= "2.0.0"}
  ]
  build: ["dune" "build" "-p" name "-j" jobs]
  dev-repo: "git+https://github.com/janestreet/sexplib0.git"
  url {
    src:
      "https://ocaml.janestreet.com/ocaml-core/v0.16/files/sexplib0-v0.16.0.tar.gz"
    checksum:
      "sha256=86dba26468194512f789f2fb709063515a9cb4e5c4461c021c239a369590701d"
  }
}
package "spawn" {
  opam-version: "2.0"
  version: "v0.15.1"
  synopsis: "Spawning sub-processes"
  description: """\
Spawn is a small library exposing only one functionality: spawning sub-process.

It has three main goals:

1. provide missing features of Unix.create_process such as providing a
working directory

2. provide better errors when a system call fails in the
sub-process. For instance if a command is not found, you get a proper
[Unix.Unix_error] exception

3. improve performance by using vfork when available. It is often
claimed that nowadays fork is as fast as vfork, however in practice
fork takes time proportional to the process memory while vfork is
constant time. In application using a lot of memory, vfork can be
thousands of times faster than fork."""
  maintainer: "Jane Street developers"
  authors: "Jane Street Group, LLC"
  license: "MIT"
  homepage: "https://github.com/janestreet/spawn"
  doc: "https://janestreet.github.io/spawn/"
  bug-reports: "https://github.com/janestreet/spawn/issues"
  depends: [
    "dune" {>= "2.8"}
    "ppx_expect" {with-test}
    "ocaml" {>= "4.05"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/janestreet/spawn.git"
  url {
    src: "https://github.com/janestreet/spawn/archive/v0.15.1.tar.gz"
    checksum: [
      "sha256=9afdee314fab6c3fcd689ab6eb5608d6b78078e6dede3953a47debde06c19d50"
      "sha512=efdb31d5ec5ea36d0bc80224d4ee04e46ce3428d1662870e6cebece92bc313d6eebee378802c0c059dd6e0cafea515308c31b7dfaf04a098eb4566583c1e9ed4"
    ]
  }
  x-commit-hash: "13d279ebfa8c40d4bafe18cddfdff0de54b4eaff"
}
package "stdio" {
  opam-version: "2.0"
  version: "v0.16.0"
  synopsis: "Standard IO library for OCaml"
  description: """\
Stdio implements simple input/output functionalities for OCaml.

It re-exports the input/output functions of the OCaml standard
libraries using a more consistent API."""
  maintainer: "Jane Street developers"
  authors: "Jane Street Group, LLC"
  license: "MIT"
  homepage: "https://github.com/janestreet/stdio"
  doc: "https://ocaml.janestreet.com/ocaml-core/latest/doc/stdio/index.html"
  bug-reports: "https://github.com/janestreet/stdio/issues"
  depends: [
    "ocaml" {>= "4.14.0"}
    "base" {>= "v0.16" & < "v0.17"}
    "dune" {>= "2.0.0"}
  ]
  build: ["dune" "build" "-p" name "-j" jobs]
  dev-repo: "git+https://github.com/janestreet/stdio.git"
  url {
    src:
      "https://ocaml.janestreet.com/ocaml-core/v0.16/files/stdio-v0.16.0.tar.gz"
    checksum:
      "sha256=61f0b75950614ac5378c6ec0d822cce6463402d919d5810b736fc46522b3a73e"
  }
}
package "stdlib-shims" {
  opam-version: "2.0"
  version: "0.3.0"
  synopsis: "Backport some of the new stdlib features to older compiler"
  description: """\
Backport some of the new stdlib features to older compiler,
such as the Stdlib module.

This allows projects that require compatibility with older compiler to
use these new features in their code."""
  maintainer: "The stdlib-shims programmers"
  authors: "The stdlib-shims programmers"
  license: "LGPL-2.1-only WITH OCaml-LGPL-linking-exception"
  tags: ["stdlib" "compatibility" "org:ocaml"]
  homepage: "https://github.com/ocaml/stdlib-shims"
  doc: "https://ocaml.github.io/stdlib-shims/"
  bug-reports: "https://github.com/ocaml/stdlib-shims/issues"
  depends: [
    "dune"
    "ocaml" {>= "4.02.3"}
  ]
  build: ["dune" "build" "-p" name "-j" jobs]
  dev-repo: "git+https://github.com/ocaml/stdlib-shims.git"
  url {
    src:
      "https://github.com/ocaml/stdlib-shims/releases/download/0.3.0/stdlib-shims-0.3.0.tbz"
    checksum: [
      "sha256=babf72d3917b86f707885f0c5528e36c63fccb698f4b46cf2bab5c7ccdd6d84a"
      "sha512=1151d7edc8923516e9a36995a3f8938d323aaade759ad349ed15d6d8501db61ffbe63277e97c4d86149cf371306ac23df0f581ec7e02611f58335126e1870980"
    ]
  }
  x-commit-hash: "fb6815e5d745f07fd567c11671149de6ef2e74c8"
}
package "stdune" {
  opam-version: "2.0"
  version: "3.14.2"
  synopsis: "Dune's unstable standard library"
  description:
    "This library offers no backwards compatibility guarantees. Use at your own risk."
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    "dune" {>= "3.12"}
    "ocaml" {>= "4.08.0"}
    "base-unix"
    "dyn" {= version}
    "ordering" {= version}
    "pp" {>= "1.2.0"}
    "csexp" {>= "1.5.0"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["rm" "-rf" "vendor/csexp"]
    ["rm" "-rf" "vendor/pp"]
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src:
      "https://github.com/ocaml/dune/releases/download/3.14.2/dune-3.14.2.tbz"
    checksum: [
      "sha256=e80867cb362b2749d9d9e0cbab2982f98af1daf4459b81164ca0aac6b4e6ace1"
      "sha512=c60b35de3fe000650eb8d49a44fd9aeb25c6006be15e2c88407882e0f272747abdffc6449f6cfd68b86e233dcbb7ff685fd198635947a991cf0197dd69f489be"
    ]
  }
  x-commit-hash: "b19f6df8954995899e30275055d9582b6c83687c"
}
package "topkg" {
  opam-version: "2.0"
  version: "1.0.7"
  synopsis: "The transitory OCaml software packager"
  description: """\
Topkg is a packager for distributing OCaml software. It provides an
API to describe the files a package installs in a given build
configuration and to specify information about the package's
distribution, creation and publication procedures.

The optional topkg-care package provides the `topkg` command line tool
which helps with various aspects of a package's life cycle: creating
and linting a distribution, releasing it on the WWW, publish its
documentation, add it to the OCaml opam repository, etc.

Topkg is distributed under the ISC license and has **no**
dependencies. This is what your packages will need as a *build*
dependency.

Topkg-care is distributed under the ISC license it depends on
[fmt][fmt], [logs][logs], [bos][bos], [cmdliner][cmdliner],
[webbrowser][webbrowser] and `opam-format`.

[fmt]: http://erratique.ch/software/fmt
[logs]: http://erratique.ch/software/logs
[bos]: http://erratique.ch/software/bos
[cmdliner]: http://erratique.ch/software/cmdliner
[webbrowser]: http://erratique.ch/software/webbrowser

Home page: http://erratique.ch/software/topkg"""
  maintainer: "Daniel BÃ¼nzli <daniel.buenzl i@erratique.ch>"
  authors: "The topkg programmers"
  license: "ISC"
  tags: ["packaging" "ocamlbuild" "org:erratique"]
  homepage: "https://erratique.ch/software/topkg"
  doc: "https://erratique.ch/software/topkg/doc"
  bug-reports: "https://github.com/dbuenzli/topkg/issues"
  depends: [
    "ocaml" {>= "4.05.0"}
    "ocamlfind" {build & >= "1.6.1"}
    "ocamlbuild"
  ]
  build: [
    "ocaml" "pkg/pkg.ml" "build" "--pkg-name" name "--dev-pkg" "%{dev}%"
  ]
  dev-repo: "git+https://erratique.ch/repos/topkg.git"
  url {
    src: "https://erratique.ch/software/topkg/releases/topkg-1.0.7.tbz"
    checksum:
      "sha512=09e59f1759bf4db8471f02d0aefd8db602b44932a291c05c312b1423796e7a15d1598d3c62a0cec7f083eff8e410fac09363533dc4bd2120914bb9664efea535"
  }
}
package "tsdl" {
  opam-version: "2.0"
  version: "1.0.0"
  synopsis: "Thin bindings to SDL for OCaml"
  description: """\
Tsdl is an OCaml library providing thin bindings to the cross-platform
SDL C library.

Tsdl depends on the [SDL 2.0.10][sdl] C library (or later),
[ocaml-ctypes][ctypes] and the `result` compatibility package.
Tsdl is distributed under the ISC license.

[sdl]: http://www.libsdl.org/
[ctypes]: https://github.com/ocamllabs/ocaml-ctypes

Home page: http://erratique.ch/software/tsdl"""
  maintainer: "Daniel BÃ¼nzli <daniel.buenzl i@erratique.ch>"
  authors: "The tsdl programmers"
  license: "ISC"
  tags: [
    "audio"
    "bindings"
    "graphics"
    "media"
    "opengl"
    "input"
    "hci"
    "org:erratique"
  ]
  homepage: "https://erratique.ch/software/tsdl"
  doc: "https://erratique.ch/software/tsdl/doc/"
  bug-reports: "https://github.com/dbuenzli/tsdl/issues"
  depends: [
    "ocaml" {>= "4.08.0"}
    "ocamlfind" {build}
    "ocamlbuild" {build}
    "topkg" {build & >= "1.0.3"}
    "conf-sdl2"
    "ctypes" {>= "0.14.0"}
    "ctypes-foreign"
  ]
  available: os-distribution != "opensuse-leap" | os-version >= "16"
  build: ["ocaml" "pkg/pkg.ml" "build" "--dev-pkg" "%{dev}%"]
  dev-repo: "git+https://erratique.ch/repos/tsdl.git"
  url {
    src: "https://erratique.ch/software/tsdl/releases/tsdl-1.0.0.tbz"
    checksum:
      "sha512=70ba93a07d8add11d29cf94ce173c022a52a7d57af7b9dad3abdae7fde6314d4690d3aacc8f75e598b6af2e692568399638813664db0331e0a898bdc14bfe670"
  }
  x-ci-accept-failures: ["ubuntu-18.04" "debian-10" "oraclelinux-8"]
}
package "tsdl-image" {
  opam-version: "2.0"
  version: "0.6"
  synopsis: "SDL2_Image bindings to go with Tsdl"
  description:
    "tsdl-image provides bindings to SDL2_Image intended to be used with Tsdl."
  maintainer: "Vu Ngoc San <san.vu-ngoc@laposte.net>"
  authors: "Julian Squires <julian@cipht.net>"
  license: "BSD-3-Clause"
  tags: ["tsdl" "SDL" "images" "graphics" "bindings"]
  homepage: "https://github.com/sanette/tsdl-image"
  bug-reports: "https://github.com/sanette/tsdl-image/issues"
  depends: [
    "dune" {>= "2.7"}
    "ocaml" {>= "4.03"}
    "tsdl" {>= "0.9.1"}
    "conf-sdl2-image"
    "ctypes" {>= "0.4.0"}
    "ctypes-foreign"
    "dune-configurator"
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/sanette/tsdl-image.git"
  url {
    src: "https://github.com/sanette/tsdl-image/archive/0.6.tar.gz"
    checksum: [
      "md5=c1075693e2226ac4321c7a1b71cf39e2"
      "sha512=af350af0591197bb3a670c1ed93a00f4bc514a7c2d60da309b574756200b6e34b91bf1886fa36f4eb43529cb0c2f715a2bc2c80b66fae6bdcee87e156ffc4f35"
    ]
  }
}
package "uucp" {
  opam-version: "2.0"
  version: "15.1.0"
  synopsis: "Unicode character properties for OCaml"
  description: """\
Uucp is an OCaml library providing efficient access to a selection of
character properties of the [Unicode character database].

Uucp is distributed under the ISC license. It has no dependency.

Home page: <http://erratique.ch/software/uucp>

[Unicode character database]: http://www.unicode.org/reports/tr44/"""
  maintainer: "Daniel BÃ¼nzli <daniel.buenzl i@erratique.ch>"
  authors: "The uucp programmers"
  license: "ISC"
  tags: ["unicode" "text" "character" "org:erratique"]
  homepage: "https://erratique.ch/software/uucp"
  doc: "https://erratique.ch/software/uucp/doc/"
  bug-reports: "https://github.com/dbuenzli/uucp/issues"
  depends: [
    "ocaml" {>= "4.14.0"}
    "ocamlfind" {build}
    "ocamlbuild" {build}
    "topkg" {build & >= "1.0.3"}
    "uucd" {with-test & dev & >= "15.1.0" & < "16.0.0"}
    "uunf" {with-test}
  ]
  depopts: ["uunf" "cmdliner"]
  conflicts: [
    "uunf" {< "15.1.0" | >= "16.0.0"}
    "cmdliner" {< "1.1.0"}
  ]
  build: [
    "ocaml"
    "pkg/pkg.ml"
    "build"
    "--dev-pkg"
    "%{dev}%"
    "--with-uunf"
    "%{uunf:installed}%"
    "--with-cmdliner"
    "%{cmdliner:installed}%"
  ]
  post-messages:
    "If the build fails with \"ocamlopt.opt got signal and exited\", issue 'ulimit -s unlimited' and retry."
      {failure & (arch = "ppc64" | arch = "arm64")}
  dev-repo: "git+https://erratique.ch/repos/uucp.git"
  url {
    src: "https://erratique.ch/software/uucp/releases/uucp-15.1.0.tbz"
    checksum:
      "sha512=998f94fadb72357b15a3042a3d11c31b3e16f281822673f2defdd515cd1394d55de1817628be8bd5c030175f9e62c53630d4139a1c0253800f9fb898b0f11364"
  }
}
package "uuseg" {
  opam-version: "2.0"
  version: "15.1.0"
  synopsis: "Unicode text segmentation for OCaml"
  description: """\
Uuseg is an OCaml library for segmenting Unicode text. It implements
the locale independent [Unicode text segmentation algorithms][1] to
detect grapheme cluster, word and sentence boundaries and the [Unicode
line breaking algorithm][2] to detect line break opportunities.

The library is independent from any IO mechanism or Unicode text data
structure and it can process text without a complete in-memory
representation.

Uuseg is distributed under the ISC license. It depends on [Uucp].

[1]: http://www.unicode.org/reports/tr29/
[2]: http://www.unicode.org/reports/tr14/
[Uucp]: http://erratique.ch/software/uucp

Homepage: <http://erratique.ch/software/uuseg>"""
  maintainer: "Daniel BÃ¼nzli <daniel.buenzl i@erratique.ch>"
  authors: "The uuseg programmers"
  license: "ISC"
  tags: ["unicode" "text" "segmentation" "org:erratique"]
  homepage: "https://erratique.ch/software/uuseg"
  doc: "https://erratique.ch/software/uuseg/doc/"
  bug-reports: "https://github.com/dbuenzli/uuseg/issues"
  depends: [
    "ocaml" {>= "4.14.0"}
    "ocamlfind" {build}
    "ocamlbuild" {build}
    "topkg" {build & >= "1.0.3"}
    "uucp" {>= "15.1.0" & < "16.0.0"}
  ]
  depopts: ["uutf" "cmdliner"]
  conflicts: [
    "uutf" {< "1.0.0"}
    "cmdliner" {< "1.1.0"}
  ]
  build: [
    "ocaml"
    "pkg/pkg.ml"
    "build"
    "--dev-pkg"
    "%{dev}%"
    "--with-uutf"
    "%{uutf:installed}%"
    "--with-cmdliner"
    "%{cmdliner:installed}%"
  ]
  dev-repo: "git+https://erratique.ch/repos/uuseg.git"
  url {
    src: "https://erratique.ch/software/uuseg/releases/uuseg-15.1.0.tbz"
    checksum:
      "sha512=1e9460dc5a856c985d40c61fd1560bdfdb8bbaf8d7430405814589b47d4a7f7869658d1e3198c7a9132412e9b4b85402ceb4bda5040da426b69e9aef4222a23a"
  }
}
package "uutf" {
  opam-version: "2.0"
  version: "1.0.3"
  synopsis: "Non-blocking streaming Unicode codec for OCaml"
  description: """\
Uutf is a non-blocking streaming codec to decode and encode the UTF-8,
UTF-16, UTF-16LE and UTF-16BE encoding schemes. It can efficiently
work character by character without blocking on IO. Decoders perform
character position tracking and support newline normalization.

Functions are also provided to fold over the characters of UTF encoded
OCaml string values and to directly encode characters in OCaml
Buffer.t values. **Note** that since OCaml 4.14, that functionality
can be found in the Stdlib and you are encouraged to migrate to it.

Uutf has no dependency and is distributed under the ISC license.

Home page: http://erratique.ch/software/uutf  
Contact: Daniel BÃ¼nzli `<daniel.buenzl i@erratique.ch>`"""
  maintainer: "Daniel BÃ¼nzli <daniel.buenzl i@erratique.ch>"
  authors: "The uutf programmers"
  license: "ISC"
  tags: ["unicode" "text" "utf-8" "utf-16" "codec" "org:erratique"]
  homepage: "https://erratique.ch/software/uutf"
  doc: "https://erratique.ch/software/uutf/doc/"
  bug-reports: "https://github.com/dbuenzli/uutf/issues"
  depends: [
    "ocaml" {>= "4.03.0"}
    "ocamlfind" {build}
    "ocamlbuild" {build}
    "topkg" {build & >= "1.0.3"}
  ]
  depopts: ["cmdliner"]
  conflicts: [
    "cmdliner" {< "0.9.8"}
  ]
  build: [
    "ocaml"
    "pkg/pkg.ml"
    "build"
    "--dev-pkg"
    "%{dev}%"
    "--with-cmdliner"
    "%{cmdliner:installed}%"
  ]
  dev-repo: "git+https://erratique.ch/repos/uutf.git"
  url {
    src: "https://erratique.ch/software/uutf/releases/uutf-1.0.3.tbz"
    checksum:
      "sha512=50cc4486021da46fb08156e9daec0d57b4ca469b07309c508d5a9a41e9dbcf1f32dec2ed7be027326544453dcaf9c2534919395fd826dc7768efc6cc4bfcc9f8"
  }
}
package "wasmer" {
  opam-version: "2.0"
  version: "1.2.1"
  synopsis: "OCaml bindings for Wasmer"
  description: "The official Wasmer bindings for OCaml"
  maintainer: "engineering@wasmer.io"
  authors: "rajdakin"
  license: "MIT"
  tags: "org:wasmer"
  homepage: "https://github.com/wasmerio/wasmer-ocaml"
  bug-reports: "https://github.com/wasmerio/wasmer-ocaml/issues"
  depends: ["ocaml" "dune" "ctypes" "ctypes-foreign"]
  build: [
    ["dune" "subst"] {pinned}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/wasmerio/wasmer-ocaml.git"
  url {
    src: "git+https://github.com/kenranunderscore/wasmer-ocaml.git"
  }
}
package "xdg" {
  opam-version: "2.0"
  version: "3.14.2"
  synopsis: "XDG Base Directory Specification"
  description:
    "https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html"
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    "dune" {>= "3.12"}
    "ocaml" {>= "4.08"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["rm" "-rf" "vendor/csexp"]
    ["rm" "-rf" "vendor/pp"]
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src:
      "https://github.com/ocaml/dune/releases/download/3.14.2/dune-3.14.2.tbz"
    checksum: [
      "sha256=e80867cb362b2749d9d9e0cbab2982f98af1daf4459b81164ca0aac6b4e6ace1"
      "sha512=c60b35de3fe000650eb8d49a44fd9aeb25c6006be15e2c88407882e0f272747abdffc6449f6cfd68b86e233dcbb7ff685fd198635947a991cf0197dd69f489be"
    ]
  }
  x-commit-hash: "b19f6df8954995899e30275055d9582b6c83687c"
}
package "yojson" {
  opam-version: "2.0"
  version: "2.1.2"
  synopsis:
    "Yojson is an optimized parsing and printing library for the JSON format"
  description: """\
Yojson is an optimized parsing and printing library for the JSON format.

ydump is a pretty-printing command-line program provided with the
yojson package."""
  maintainer: [
    "paul-elliot@tarides.com" "nathan@tarides.com" "marek@tarides.com"
  ]
  authors: "Martin Jambon"
  license: "BSD-3-Clause"
  homepage: "https://github.com/ocaml-community/yojson"
  doc: "https://ocaml-community.github.io/yojson"
  bug-reports: "https://github.com/ocaml-community/yojson/issues"
  depends: [
    "dune" {>= "2.7"}
    "ocaml" {>= "4.02.3"}
    "cppo" {build}
    "alcotest" {with-test & >= "0.8.5"}
    "seq" {>= "0.2.2"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/ocaml-community/yojson.git"
  url {
    src:
      "https://github.com/ocaml-community/yojson/releases/download/2.1.2/yojson-2.1.2.tbz"
    checksum: [
      "sha256=59f2f1abbfc8a7ccbdbf608894e5c75e8a76006e34899254446f83e200dfb4f9"
      "sha512=309cba7568dec51de20c7ab8df033258c275b8d58b0a36a66b26e673a3bc050cbd7e39ff8fe4796e89263e125bcc21e04dc36a394f3cc201956887eee1fb281a"
    ]
  }
  x-commit-hash: "e51163ee04ad79408975545ec5fc3b7dc41f68eb"
}
